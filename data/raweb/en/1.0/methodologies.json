{
  "1.1.1": "1. Find in the document the images implemented using an `<img>` element or an element with the WAI-ARIA `role=\"img\"` attribute.\n2. For each image, determine whether the image conveys information.\n3. If it is an `<img>` element, check that the image has at least one of the following text alternatives:\n   - passage of text associated via the WAI-ARIA `aria-labelledby` attribute;\n   - value of the WAI-ARIA `aria-label` attribute;\n   - value of the `alt` attribute;\n   - value of the `title` attribute.\n4. In the case of an element with the WAI-ARIA `role=\"img\"` attribute, check that the image has at least one of the following text alternatives:\n   - passage of text associated via the WAI-ARIA `aria-labelledby` attribute;\n   - value of the WAI-ARIA `aria-label` attribute.\n5. If at least one text alternative is found, **the test is validated**.\n",
  "1.1.2": "1. Find in the document the `<area>` elements.\n2. For each `<area>` element, determine whether the image map area carries information.\n3. Check that the image map area has at least one of the following text alternatives:\n   - value of the WAI-ARIA `aria-label` attribute;\n   - value of the `alt` attribute;\n4. If at least one text alternative is found, **the test is validated**.\n",
  "1.1.3": "1. Find in the document the `<input>` elements with the `type=\"image\"` attribute.\n2. For each `<input>` element with the attribute type=\"image\", determine whether the image used conveys information.\n3. Check that the `<input>` element has at least one of the following text alternatives:\n   - passage of text associated via the WAI-ARIA `aria-labelledby` attribute;\n   - value of the WAI-ARIA `aria-label` attribute;\n   - value of the `alt` attribute;\n   - value of the `title` attribute.\n4. If at least one text alternative is found, **the test is validated**.\n",
  "1.1.4": "1. Find in the document the `<img>` elements with the `ismap` attribute.\n2. For each `<img>` element with the `ismap` attribute, check for the presence of a link or set of links (or another type of user interface component which plays a similar role, such as a combobox, for example) providing access to the same resources as when the image is clicked.\n3. If this is the case, **the test is validated**.\n",
  "1.1.5": "1. Find in the document the `<svg>` elements.\n2. For each `<svg>` element, determine whether the image conveys information.\n3. Check that the `<svg>` element has a WAI-ARIA `role=\"img\"` attribute.\n4. If this is not the case, the test is invalidated.\n5. If necessary, check that the `<svg>` element has at least one of the following text alternatives:\n   - value of the `<title>` element;\n   - passage of text linked by the WAI-ARIA `aria-labelledby` attribute;\n   - value of the WAI-ARIA `aria-label` attribute;\n6. If at least one text alternative is found, **the test is validated**.\n",
  "1.1.6": "1. Find in the document the opening `<object>` tags with the `type=\"image/...\"` attribute.\n2. For each opening `<object>` tag with the `type=\"image/...\"` attribute, determine whether the image used is conveying information.\n3. Check that the `<object>` element has a WAI-ARIA `role=\"img\"` attribute.\n4. Check that the `<object>` element has at least one of the following text alternatives:\n   - passage of text associated via the WAI-ARIA `aria-labelledby` attribute;\n   - value of the WAI-ARIA `aria-label` attribute;\n   - value of the `title` attribute.\n5. If at least one text alternative is found, **the test is validated**.\n6. Otherwise, check that:\n   - either the `<object>` element is immediately followed by an adjacent link or button providing access to alternative content;\n   - or a mechanism allows the user to replace the `<object>` element with alternative content.\n7. If this is the case, **the test is validated**.\n",
  "1.1.7": "1. For each `<embed>` element with the `type=\"image/...\"` attribute, determine whether the image used is conveying information.\n2. Check that the `<embed>` element has a WAI-ARIA `role=\"img\"` attribute.\n3. Check that the `<embed>` element has at least one of the following text alternatives:\n   - passage of text associated via the WAI-ARIA `aria-labelledby` attribute;\n   - value of the WAI-ARIA `aria-label` attribute;\n   - value of the `title` attribute.\n4. If at least one text alternative is found, **the test is validated**.\n6. Otherwise, check that:\n   - either the `<object>` element is immediately followed by an adjacent link or button providing access to alternative content;\n   - or a mechanism allows the user to replace the `<object>` element with alternative content.\n6. If this is the case, **the test is validated**.\n",
  "1.1.8": "1. Find `<canvas>` elements in the document.\n2. For each `<canvas>` element, determine whether the image used conveys information.\n3. Check that the `<canvas>` element has a WAI-ARIA `role=\"img\"` attribute.\n4. Check that the opening `<canvas>` tag has at least one of the following text alternatives:\n   - passage of text associated via the WAI-ARIA `aria-labelledby` attribute;\n   - value of the WAI-ARIA `aria-label` attribute.\n5. If at least one text alternative is found, **the test is validated**.\n6. If steps 3 and 4 are not satisfied, check that:\n   - either the `<canvas>` element has alternative content between the `<canvas>` and `</canvas>` tags;\n   - or the `<canvas>` element is immediately followed by an adjacent link or button providing access to alternative content;\n   - or a mechanism allows the user to replace the `<canvas>` element with alternative content.\n7. If this is the case, **the test is validated**.\n\nNote: if the `<canvas>` element has an `img` role, its alternative can only be provided by the techniques listed in step 4.\n",
  "1.2.1": "1. Find in the document the decorative images without a legend implemented using an `<img>` element.\n2. For each image, check that the image has no `aria-labelledby`, `aria-label` or `title` attributes and that it has\n   - an empty `alt` attribute (`alt=\"\"`);\n   - or a WAI-ARIA `aria-hidden=\"true\"` or `role=\"presentation\"` attribute.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.2.2": "1. Find in the document the decorative images implemented using an `<area>` element (without a `href` attribute).\n2. For each image, check that the `<area>` element has no `aria-labelledby`, `aria-label` or `title` attributes and that it has\n   - an empty `alt` attribute (`alt=\"\"`);\n   - or a WAI-ARIA `aria-hidden=\"true\"` or `role=\"presentation\"` attribute.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.2.3": "1. Find in the document the  decorative images implemented without an image caption using an `<object>` element (with a `type=\"image/...\"` attribute).\n2. For each image, check that the opening `<object>` tag does not have `aria-labelledby`, `aria-label` or `title` attributes and that it\n   - has a WAI-ARIA `aria-hidden=\"true\"` attribute;\n   - and has no text alternative;\n   - and has no alternative content between the `<object>` and `</object>` tags.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.2.4": "1. Find in the document the decorative images without an image caption, implemented using a `<svg>` element.\n2. For each image, check that the `<svg>` element has no `aria-labelledby` or `aria-label` attributes and that it\n   - has a WAI-ARIA `aria-hidden=\"true\"` attribute;\n   - and has no text alternative (including its child elements);\n   - and does not contain `<title>` and `<desc>` elements unless empty of content;\n   - and has no `title` attribute (and its child elements).\n3. If this is the case for each image, **the test is validated**.\n",
  "1.2.5": "1. Find in the document the decorative images without an image caption implemented using a `<canvas>` element.\n2. For each image, check that the `<canvas>` element has no `aria-labelledby`, `aria-label` or `title` attributes and that it\n   - has a WAI-ARIA `aria-hidden=\"true\"` attribute;\n   - and has no text alternative;\n   - and has no alternative content between the `<canvas>` and `</canvas>` tags.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.2.6": "1. Find in the document the decorative images without an image caption using an `<embed>` element (with a `type=\"image/...\"` attribute).\n2. For each image, check that the `<embed>` element does not have `aria-labelledby`, `aria-label` or `title` attributes and that it\n   - has a WAI-ARIA `aria-hidden=\"true\"` attribute;\n   - and has no text alternative;\n3. If this is the case for each image, **the test is validated**.\n",
  "1.3.1": "1. Find in the document the images implemented using an `<img>` element (or an element with the WAI-ARIA `role=\"img\"` attribute) with a text alternative (image).\n2. For each image, check that the text alternative is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.3.2": "1. Find in the document the `<area>` elements with a text alternative.\n2. For each `<area>` element, check that the text alternative is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.3.3": "1. Find in the document the `<input>` elements with the `type=\"image\"` attribute and a text alternative (image).\n2. For each `<input>` element with the `type=\"image\"` attribute, check that the text alternative is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.3.4": "1. Find in the document the `<object>` elements with the `type=\"image/...\"` attribute and a text alternative.\n2. For each `<object>` element with the `type=\"image/...\"` attribute, check that the text alternative is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.3.5": "1. Find in the document the `<embed>` elements with the `type=\"image/...\"` attribute and a text alternative.\n2. For each `<embed>` element with the `type=\"image/...\"` attribute, check that the text alternative is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.3.6": "1. Find in the document the `<svg>` elements with a text alternative.\n2. For each `<svg>` element, check that the text alternative is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.3.7": "1. Find in the document the `<canvas>` elements that have an alternative text.\n2. For each `<canvas>` element, check that the text alternative is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.3.8": "1. Find in the document the `<canvas>` elements with alternative content between the `<canvas>` and `</canvas>` tags.\n2. For each `<canvas>` element, check that the alternative content is correctly rendered (by assistive technologies).\n3. If this is the case for each image, **the test is validated**.\n",
  "1.3.9": "1. Find in the document the images with a text alternative.\n2. For each image, check that the text alternative is short and concise.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.4.1": "1. Find in the document the images that are implemented by means of an `<img>` element with a text alternative and used as a CAPTCHA or as a test image.\n2. For each image, check that the text alternative is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.4.2": "1. Find in the document the `<area>` elements with a text alternative and used as a CAPTCHA or as a test image.\n2. For each `<area>` element, check that the alternative text is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.4.3": "1. Find in the document the `<input>` elements with the `type=\"image\"` attribute and a text alternative, and used as a CAPTCHA or as a test image.\n2. For each `<input>` element with the `type=\"image\"` attribute, check that the text alternative is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.4.4": "1. Find in the document the `<object>` elements with the `type=\"image/...\"` attribute and a text alternative, and used as a CAPTCHA or as a test image.\n2. For each `<object>` element with the `type=\"image/...\"` attribute, check that the text alternative is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.4.5": "1. Find in the document the `<embed>` elements with the `type=\"image/...\"` attribute and a text alternative, and used as a CAPTCHA or as a test image.\n2. For each `<embed>` element with the `type=\"image/...\"` attribute, check that the text alternative is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.4.6": "1. Find in the document the `<svg>` elements with a text alternative and used as a CAPTCHA or as a test image.\n2. For each `<svg>` element, check that the alternative text is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.4.7": "1. Find in the document the `<canvas>` elements with a text alternative and used as a CAPTCHA or as a test image.\n2. For each `<canvas>` element, check that the alternative text is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.5.1": "1. Find in the document the images (`<img>`, `<area>`, `<object>`, `<embed>`, `<svg>`, `<canvas>` elements or elements with a WAI-ARIA `role=\"img\"` attribute) used as CAPTCHA or test image.\n2. For each image, check that there is\n   - either another form of non-graphical CAPTCHA, at least;\n   - or another solution for accessing the functionality that is secured by the CAPTCHA.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.5.2": "1. Find in the document the buttons associated with an image (`<input>` elements with the `type=\"image\"` attribute) used as a CAPTCHA or as a test image.\n2. For each button associated with an image, check that there is\n   - either another form of non-graphical CAPTCHA, at least;\n   - or another solution for accessing the functionality that is secured by the CAPTCHA.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.6.1": "1. Find in the document the images that are implemented using an `<img>` element (or an element with the WAI-ARIA `role=\"img\"` attribute) and conveying information that requires a detailed description.\n2. For each image, check that there is\n   - Either a text alternative containing a reference to a detailed description adjacent to the image;\n   - Or a link or adjacent button giving access to the detailed description.\n3. If this is the case for each image, **the test is validated**.",
  "1.6.2": "1. Find in the document the `<object>` elements with the `type=\"image/...\"` attribute, which contain information requiring a detailed description.\n2. For each `<object>` element with the `type=\"image/...\"` attribute, check that there is\n   - either a text alternative containing a reference to a detailed description adjacent to the image;\n   - or an adjacent link or button giving access to the detailed description.\n3. If this is the case for each `<object>` element with the `type=\"image/...\"` attribute, **the test is validated**.\n",
  "1.6.3": "1. Find in the document the `<embed>` elements with the `type=\"image/...\"` attribute, which contain information requiring a detailed description.\n2. For each `<embed>` element with the `type=\"image/...\"` attribute, check that there is\n   - either a text alternative containing a reference to a detailed description adjacent to the image;\n   - or an adjacent link or button giving access to the detailed description.\n3. If this is the case for each `<embed>` element with the `type=\"image/...\"` attribute, **the test is validated**.\n",
  "1.6.4": "1. Find in the document the `<input>` elements with the `type=\"image\"` attribute, which contain information requiring a detailed description.\n2. For each `<input>` element with the `type=\"image\"` attribute, check that there is\n   - either a text alternative containing a reference to a detailed description adjacent to the image;\n   - a link or adjacent button giving access to the detailed description;\n   - or a WAI-ARIA attribute aria-describedby associating a passage of text acting as a detailed description.\n3. If this is the case for each `<input>` element with the `type=\"image\"` attribute, **the test is validated**.\n",
  "1.6.5": "1. Find in the document the `<svg>` elements conveying information that require a detailed description.\n2. For each `<svg>` element, check that there is\n   - either a WAI-ARIA `aria-label` attribute containing the text alternative and a reference to an adjacent detailed description;\n   - or a WAI-ARIA `aria-labelledby` attribute associating a passage of text acting as a text alternative and another acting as a detailed description;\n   - or a WAI-ARIA `aria-describedby` attribute associating a passage of text acting as a detailed description;\n   - or a link or an adjacent button giving access to the detailed description.\n3. If this is the case for each `<svg>` element, **the test is validated**.\n",
  "1.6.6": "1. Find in the document the `<svg>` elements conveying information for which a detailed description is provided using an `aria-label`, `aria-labelledby` or `aria-describedby` attribute.\n2. For each `<svg>` element, check that the content of the detailed description is correctly rendered (by assistive technologies).\n3. If this is the case for each `<svg>` element, **the test is validated**.\n",
  "1.6.7": "1. Find in the document the `<canvas>` elements conveying information that require a detailed description.\n2. For each `<canvas>` element, check that there is\n   - either a WAI-ARIA aria-label attribute containing the text alternative and a reference to an adjacent detailed description;\n   - or a WAI-ARIA aria-labelledby attribute associating a passage of text acting as a text alternative and another acting as a detailed description;\n   - or a text content between `<canvas>` and `</canvas>` referring to a detailed description adjacent to the bitmap image;\n   - or a text content between `<canvas>` and `</canvas>` acting as a detailed description;\n   - or an adjacent link or button giving access to the detailed description.\n3. If this is the case for each `<canvas>` element, **the test is validated**.\n",
  "1.6.8": "1. Find in the document the `<canvas>` elements conveying information whose detailed description is provided by means of an `aria-label`, `aria-labelledby` or `aria-describedby` attribute.\n2. For each `<canvas>` element, check that the content of the detailed description is correctly rendered (by assistive technologies).\n3. If this is the case for each `<canvas>` element, **the test is validated**.\n",
  "1.6.9": "1. Find in the document the images (`<img>`, `<input>` elements with the `type=\"image\"` attribute, `<area>`, `<object>`, `<embed>`, `<svg>`, `<canvas>` elements, or elements possessing a WAI-ARIA `role=\"img\"` attribute) conveying information whose detailed description uses a WAI-ARIA `aria-describedby` attribute.\n2. For each image, check that the content of the detailed description is correctly rendered (by assistive technologies).\n3. If this is the case for each image, **the test is validated**.\n",
  "1.6.10": "1. Find in the document the elements with a WAI-ARIA `role=\"img\"` attribute that contain information requiring a detailed description.\n2. For each `role=\"img\"` element, check that there is\n   - either a WAI-ARIA `aria-label` attribute containing the text alternative and a reference to an adjacent detailed description;\n   - or a WAI-ARIA `aria-labelledby` attribute associating a passage of text acting as a text alternative and another acting as a detailed description;\n   - or a WAI-ARIA `aria-describedby` attribute associating a passage of text acting as a detailed description;\n   - or a link or an adjacent button giving access to the detailed description.\n3. If this is the case for each `role=\"img\"` element, **the test is validated**.\n",
  "1.7.1": "1. Find in the document the images that are implemented using an `<img>` element and have a detailed description.\n2. For each image, check that the detailed description is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.7.2": "1. Find in the document the `<input>` elements with the `type=\"image\"` attribute which have a detailed description.\n2. For each `<input>` element with the `type=\"image\"` attribute, check that the detailed description is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.7.3": "1. Find in the document the `<object>` elements with the `type=\"image/...\"` attribute which have a detailed description.\n2. For each `<object>` element with the `type=\"image/...\"` attribute, check that the detailed description is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.7.4": "1. Find in the document the `<embed>` elements with the `type=\"image/...\"` attribute which have a detailed description.\n2. For each `<embed>` element with the `type=\"image/...\"` attribute, check that the detailed description is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.7.5": "1. Find in the document the `<svg>` elements that have a detailed description.\n2. For each `<svg>` element, check that the detailed description is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.7.6": "1. Find in the document the `<canvas>` elements that have a detailed description.\n2. For each `<canvas>` element, check that the detailed description is relevant.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.8.1": "1. Find in the document the images of text implemented using an `<img>` element (or an element with the WAI-ARIA `role=\"img\"` attribute).\n2. For each image, check that:\n   - either a replacement mechanism exists;\n   - or the image contains text which uses a graphic effect which cannot be reproduced in CSS.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.8.2": "1. Find in the document the \"image of text\" buttons (`<input>` element with the `type=\"image\"` attribute).\n2. For each image, check that\n   - either there is a replacement mechanism;\n   - or the image contains text that uses a graphic effect that cannot be reproduced in CSS.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.8.3": "1. Find in the document the image of text objects (`<object>` element with the `type=\"image/...\"` attribute).\n2. For each image, check that\n   - either there is a replacement mechanism;\n   - or the image contains text which uses a graphic effect which cannot be reproduced in CSS.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.8.4": "1. Find in the document the embedded images of text (`<embed>` element with the `type=\"image/...\"` attribute).\n2. For each image, check that\n   - Either there is a replacement mechanism;\n   - Or the image contains text which uses a graphic effect which cannot be reproduced in CSS.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.8.5": "1. Find in the document the bitmap images of text (`<canvas>` element).\n2. For each image, check that\n   - either there is a replacement mechanism;\n   - or the image contains text that uses a graphic effect that cannot be reproduced in CSS.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.8.6": "1. Find in the document the vector images of texts (`<svg>` element) that carry information and whose text is not completely implemented using `<text>` elements.\n2. For each image, check that\n   - either there is a replacement mechanism;\n   - or the image contains text which uses a graphic effect which cannot be reproduced in CSS.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.9.1": "1. In the document, find the images with a legend implemented using the `<img>` element, an `<input>` element with the `type=\"image\"` attribute or an element with the WAI-ARIA `role=\"img\"` attribute.\n2. For each image, check that\n   - the image and its legend are contained in a `<figure>` tag;\n   - the `<figure>` tag has a WAI-ARIA property `role=\"figure\"` or `role=\"group\"`;\n   - the `<figure>` tag has a WAI-ARIA `aria-label` attribute whose content is identical to the content of the legend;\n   - the legend is contained in a `<figcaption>` tag.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.9.2": "1. Find in the document the object images with a legend (`<object>` element with the `type=\"image/...\"` attribute).\n2. For each image, check that\n   - the image and its legend are contained in a `<figure>` tag;\n   - the `<figure>` tag has a WAI-ARIA property `role=\"figure`\" or `role=\"group\"`;\n   - the `<figure>` tag has a WAI-ARIA `aria-label` attribute whose content is identical to the content of the legend;\n   - the legend is contained in a `<figcaption>` tag.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.9.3": "1. Find in the document the embedded images with a legend (`<embed>` element with the `type=\"image/...\"` attribute).\n2. For each image, check that\n   - the image and its legend are contained in a `<figure>` tag;\n   - the `<figure>` tag has a WAI-ARIA `role=\"figure\"` or `role=\"group\"` property;\n   - the `<figure>` tag has a WAI-ARIA `aria-label` attribute whose content is identical to the content of the legend;\n   - the legend is contained in a `<figcaption>` tag.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.9.4": "1. Find in the document the vector images with a legend (`<svg>` element).\n2. For each image, check that\n   - the image and its legend are contained in a `<figure>` tag;\n   - the `<figure>` tag has a WAI-ARIA `role=\"figure\"` or `role=\"group\"` property;\n   - the `<figure>` tag has a WAI-ARIA `aria-label` attribute whose content is identical to the content of the legend;\n   - the legend is contained in a `<figcaption>` tag.\n3. If this is the case for each image, **the test is validated**.\n",
  "1.9.5": "1. Find in the document the bitmap images (`<canvas>` element).\n2. For each image, check that\n   - the image and its legend are contained in a `<figure>` tag;\n   - the `<figure>` tag has a WAI-ARIA `role=\"figure\"` or `role=\"group\"` property;\n   - the `<figure>` tag has a WAI-ARIA `aria-label` attribute whose content is identical to the content of the legend;\n   - the legend is contained in a `<figcaption>` tag.\n3. If this is the case for each image, **the test is validated**.\n",
  "2.1.1": "1. Find the frames in the document (`<iframe>` or `<frame>` element).\n2. For each frame, check that it has a `title` attribute.\n3. If this is the case for each frame, **the test is validated**.\n",
  "2.2.1": "1. Find the frames in the document (`<iframe>` or `<frame>` element).\n2. For each frame with a `title` attribute, check that its content is relevant.\n3. If this is the case for each frame, **the test is validated**.\n",
  "3.1.1": "1. Find in the document the information provided by the colour in a word or set of words.\n2. For each of these pieces of information, check that there is another way of retrieving this information (presence of a title attribute, an icon or a graphic effect in terms of shape or position, a typographic effect, etc.).\n3. If this is the case for each piece of information, **the test is validated**.\n",
  "3.1.2": "1. Find the information (provided by colour) in a text in the document.\n2. For each of these items of information, check that there is another way of retrieving the information (presence of a title attribute, an icon or a graphic effect in terms of shape or position, a typographic effect, etc.).\n3. If this is the case for each piece of information, **the test is validated**.\n",
  "3.1.3": "1. Find the information provided by the colour in an image in the document.\n2. For each of these items of information, check that there is another way of retrieving this information (presence of a title attribute, an icon or a graphic effect based on shape or position, a typographic effect, etc.).\n3. If this is the case for each piece of information, **the test is validated**.\n",
  "3.1.4": "1. Find the information provided by the colour in a CSS property in the document.\n2. For each of these pieces of information, check that there is another way of retrieving this information (presence of a title attribute, an icon or a graphic effect based on shape or position, a typographic effect, etc.).\n3. If this is the case for each piece of information, **the test is validated**.\n",
  "3.1.5": "1. Find the information provided by the colour in the document in a time-based medium.\n2. For each of these pieces of information, check that there is another way of retrieving this information (presence of a title attribute, an icon or a graphic effect of shape or position, a typographic effect, etc.).\n3. If this is the case for each piece of information, **the test is validated**.\n",
  "3.1.6": "1. Find the information provided by colour in non-time-based media in the document.\n2. For each of these items of information, check that there is another way of retrieving this information (presence of a title attribute, an icon or a graphic effect based on shape or position, a typographic effect, etc.).\n3. If this is the case for each piece of information, **the test is validated**.\n",
  "3.2.1": "1. Find in the document texts and images of texts with no bold effect and a rendered size of less than 24px that could cause contrast problems.\n2. For each of these texts, check that\n   - either the contrast ratio between the text and its background is 4.5:1, at least;\n   - or a mechanism allows the user to display the text with a contrast ratio of at least 4.5:1.\n3. If this is the case for each text, **the test is validated**.\n",
  "3.2.2": "1. Find in the document bold texts and bold images of texts with a rendered size of less than 18.5px that could cause contrast problems.\n2. For each of these texts, check that\n   - either the contrast ratio between the text and its background is 4.5:1, at least;\n   - or a mechanism allows the user to display the text with a contrast ratio of at least 4.5:1.\n3. If this is the case for each text, **the test is validated**.\n",
  "3.2.3": "1. Find in the document texts and images of texts without bold effect with a rendered size greater than or equal to 24px that could cause contrast problems.\n2. For each of these texts, check that\n   - either the contrast ratio between the text and its background is at least 3:1;\n   - or a mechanism allows the user to display the text with a contrast ratio of at least 3:1.\n3. If this is the case for each text, **the test is validated**.\n",
  "3.2.4": "1. Find in the document bold texts and bold images of texts with a rendered size greater than or equal to 18.5px that could cause contrast problems.\n2. For each of these texts, check that\n   - either the contrast ratio between the text and its background is at least 3:1;\n   - or a mechanism allows the user to display the text with a contrast ratio of at least 3:1.\n3. If this is the case for each text, **the test is validated**.\n",
  "3.2.5": "1. Find the mechanisms used to display a compliant contrast ratio in the document.\n2. For each of these mechanisms, check that the contrast ratio between the text and the background colour is sufficiently high.\n3. If this is the case for each mechanism, **the test is validated**.\n",
  "3.3.1": "1. Find in the document the user interface components that could cause contrast problems.\n2. For each of these components, check that\n   - either the contrast ratio between the colours of the component in its various states and the adjacent background colour is at least 3:1;\n   - or a mechanism allows the user to display the component with a contrast ratio of at least 3:1.\n3. If this is the case for each component, **the test is validated**.\n",
  "3.3.2": "1. Find in the document the graphic elements that could cause contrast problems.\n2. For each of these elements, check that\n   - either the contrast ratio between the colours of the graphic element required to understand it and the adjacent background colour is at least 3:1;\n   - or a mechanism allows the user to display the graphic element with a contrast ratio of at least 3:1.\n3. If this is the case for each component, **the test is validated**.\n",
  "3.3.3": "1. Find in the document the graphic elements that could cause contrast problems.\n2. For each of these elements, check that\n   - either the contrast ratio between the different adjacent colours of the graphic element, when they are necessary for its understanding, is at least 3:1;\n   - a mechanism allows the user to display the graphic element with a contrast ratio of at least 3:1.\n3. If this is the case for each graphic element, **the test is validated**.\n",
  "3.3.4": "1. Find in the document the mechanisms that enable a compliant contrast ratio to be displayed.\n2. For each of these mechanisms, check that the contrast ratio between the colours of the component or the graphic element conveying information of which it is composed is sufficiently high.\n3. If this is the case for each mechanism, **the test is validated**.",
  "4.1.1": "1. Find in the document the time-based media (`<audio>`, `<video>` or `<object>` elements) that require a transcript.\n2. For each audio-only time-based media item, check for the presence of a transcript:\n   - either accessible via a button or an adjacent link (a URL or an anchor);\n   - or clearly identifiable adjacent.\n3. If this is the case for each time-based media, **the test is validated**.\n",
  "4.1.2": "1. Find in the document the time-based media (`<video>` or `<object>` elements) that require a transcript.\n2. For each video-only time-based media, check for the presence of:\n   - an alternative audio-only version accessible via an adjacent link or button (a URL or an anchor); or\n   - an adjacent alternative audio-only version; or\n   - a transcript accessible via an adjacent link or button (a URL or an anchor);\n   - a clearly identifiable adjacent transcript; or\n   - a synchronised audio description; or\n   - an alternative version with an audio description accessible by means of an adjacent link or button (a URL or an anchor).\n3. If this is the case for each time-based media, **the test is validated**.\n",
  "4.1.3": "1. Find synchronised the time-based media (`<video>` or `<object>` elements) in the document that require a transcript.\n2. For each synchronised time-based media, check for the presence of:\n   - a transcript accessible via an adjacent link or button (a URL or an anchor); or\n   - or a clearly identifiable adjacent transcript; or\n   - a synchronised audio description; or\n   - an alternative version with an audio description accessible by means of an adjacent link or button (a URL or an anchor).\n3. If this is the case for each time-based media, **the test is validated**.\n",
  "4.2.1": "1. Find in the document the pre-recorded audio-only time-based media that have a transcript.\n2. For each audio-only time-based media, check that the transcript is relevant.\n3. If this is the case for each time-based media, **the test is validated**.\n",
  "4.2.2": "1. Find the pre-recorded video-only time-based media in the document that have a transcript.\n2. For each video-only time-based media, check the relevance of:\n   - the transcript; or\n   - the synchronised audio description; or\n   - the synchronised audio description of the alternative version; or\n   - the alternative audio version only.\n3. If this is the case for each time-based media, **the test is validated**.\n",
  "4.2.3": "1. Find the synchronised pre-recorded time-based media in the document.\n2. For each synchronised time-based media, check the relevance of:\n   - the transcript; or\n   - the synchronised audio description; or\n   - the synchronised audio description of the alternative version.\n3. If this is the case for each time-based media, **the test is validated**.\n",
  "4.3.1": "1. Find the synchronised pre-recorded time-based media in the document.\n2. For each synchronised time-based media, check for the presence of\n   - either captions;\n   - or an alternative version with captions accessible via a link or adjacent button.\n3. If this is the case for each time-based media, **the test is validated**.\n",
  "4.3.2": "1. Find the synchronised time-based media with captions in the document using a `<track>` element.\n2. For each synchronised time-stream, check that the `<track>` tag has a `kind=\"captions\"` attribute.\n3. If this is the case for each synchronised time-based media, **the test is validated**.\n",
  "4.4.1": "1. Find the synchronised time-based media with captions in the document.\n2. For each synchronised time-based media, check that the captions are:\n\t- in the language of the video (if the spoken content is in English, the captions must be in English); \n\t- relevant (all important audio information is present, particularly dialogue);\n\t- correctly synchronised. If there is no delay between the spoken content and the appearance of the captions, the captions are correctly synchronised. The reference standard specifies that captions should appear within 100 ms of the [caption time stamp](#time-stamp).\n3. If this is the case for each synchronised time-based media, **the test is validated**.\n",
  "4.5.1": "1. Find in the document the pre-recorded video-only time-based media that require an audio description.\n2. For each video-only time-based media, check for the presence of\n   - either an audio description;\n   - or an alternative version with an audio description accessible via a button or an adjacent link (a URL or an anchor).\n3. If this is the case for video-only time-based media, **the test is validated**.\n",
  "4.5.2": "1. Find in the document the pre-recorded synchronised time-based media that require an audio description.\n2. For each synchronised time-based media, check the presence of:\n   - either an audio description;\n   - or an alternative version with an audio description accessible via a button or an adjacent link (a URL or an anchor).\n3. If this is the case for each time-based media, **the test is validated**.\n",
  "4.6.1": "1. Find in the document the video-only time-based media that have an audio description.\n2. For each time-based media, check that the synchronised audio description is relevant (all the visual information that can be vocalised in the blanks of the main soundtrack is present, in particular the inlaid texts).\n3. If this is the case for each video-only time-based media, **the test is validated**.",
  "4.6.2": "1. Find in the document the synchronised time-based media with an audio description.\n2. For each time-based media, check that the audio description is relevant (all the visual information that can be vocalised in the blanks of the main soundtrack is present, including inlaid text).\n3. If this is the case for each synchronised time-based media, **the test is validated**.\n",
  "4.7.1": "1. Find in the document the pre-recorded time-based media (video, audio or synchronised only).\n2. For each time-based media, check that a passage of text (a heading or paragraph, for example) immediately preceding or following the time-based media enables it to be identified.\n3. If this is the case for each time-based media, **the test is validated**.\n",
  "4.8.1": "1. Find all non-time-based media in the document.\n2. For each non-time-based media, check that a clearly identifiable adjacent link or button\n   - either contains the address (url) of a page containing an alternative;\n   - or provides access to an alternative on the page.\n3. If this is the case for each non-time-based media, **the test is validated**.\n",
  "4.8.2": "1. Find the non-time-based media associated with an alternative in the document.\n2. For each non-time-based media, check that\n   - the page referenced by the adjacent link or button is accessible;\n   - the alternative on the page, referenced by the adjacent link or button, is accessible.\n3. If this is the case for each non-time-based media, **the test is validated**.",
  "4.9.1": "1. Find in the document the non-time-based media associated with an alternative.\n2. For each non-time-based media, check that the alternative is relevant (it provides access to the same content and similar functions).\n3. If this is the case for each non-time-based media, **the test is validated**.\n",
  "4.10.1": "1. When the document is loaded, if a sound is triggered automatically, check that\n   - either the sound sequence lasts 3 seconds or less;\n   - or a device (a button, for example) on the element that triggered the sound (see note), or on the page, can be used to stop it;\n   - or the volume of the sequence can be controlled by the user, independently of the system volume control.\n2. If this is the case, **the test is validated**.\n\nNote: the following elements are likely to trigger sounds when the page is loaded: `<audio>`, `<video>`, `<object>`, `<embed>`, `<bgsound>` elements or JavaScript code (using the Web Audio API, for example).",
  "4.11.1": "1. Find the time-based media in the document.\n2. For each time-based media, check that the mandatory viewing control functions are present:\n   - at least: play, pause or stop;\n   - if the media has sound, it must have a sound on/off function;\n   - if the media has subtitles or captions, it must have a function for controlling the appearance/disappearance of subtitles or captions;\n   - if the media has audio description, it must have a function for controlling the appearance/disappearance of the audio description.\n3. If this is the case for each time-based media, **the test is validated**.\n",
  "4.11.2": "1. Find the time-based media with control features in the document.\n2. For each time-based media, check that\n   - either the feature is accessible via the keyboard and any pointing device;\n   - or a feature accessible via the keyboard and any pointing device enabling the same action to be performed is present on the page.\n3. If this is the case for each time-based media, **the test is validated**.\n",
  "4.11.3": "1. Find the time-based media with control functions in the document.\n2. For each time-based media, check that:\n   - either the functionality can be activated using the keyboard and any pointing device;\n   - or the page contains a function that can be activated using the keyboard and any pointing device to perform the same action.\n3. If this is the case for each time-based media, **the test is validated**.\n",
  "4.12.1": "1. Find the non-time-based media with control features in the document.\n2. For each non-time-based media, check that\n   - either the feature is accessible via the keyboard and any pointing device;\n   - or a function accessible via the keyboard and any pointing device enabling the same action to be performed is present on the page.\n3. If this is the case for each non-time-based media, **the test is validated**.\n",
  "4.12.2": "1. Find in the document the non-time-based media with control functions.\n2. For each non-time-based media, check that\n   - either the feature can be activated using the keyboard and any pointing device;\n   - or a function operable via the keyboard and any pointing device enabling the same action to be performed is present on the page.\n3. If this is the case for each non-time-based media, **the test is validated**.\n",
  "4.13.1": "1. Find the non-time-based and time-based media in the document.\n2. For each media, check that:\n   - either the name, role, value, settings and status changes of the user interface components are accessible to assistive technologies via an accessibility API (for example, dynamically updated zones in a video player are correctly rendered);\n   - or an alternative compatible with an accessibility API can be used to access the same accessibility features.\n3. If this is the case for each time-based or non-time-based media, **the test is validated**.\n",
  "4.13.2": "1. Find the time-based and non-time-based media in the document that have an alternative compatible with assistive technologies.\n2. For each media, check that\n   - either the alternative is adjacent to the time-based or non-time-based media;\n   - either the alternative is accessible via a link or an adjacent button;\n   - or there is a mechanism for replacing the time-based or non-time-based media with its alternative.\n3. If this is the case for each time-based or non-time-based media, **the test is validated**.",
  "4.14.1": "1. Locate pre-recorded time-based media with a synchronised caption track or audio description.\n2. Check that it is possible to activate and deactivate captions or audio description without any additional steps to the main features (play, pause, etc.).\n3. If this is the case, the test is validated.\n\n<i>Example:</i> If the play button can be activated from the interface by a simple mouse click (without the need to activate a first component to display a drop-down menu, for example), the captions feature should be available in the same way, with a simple click. Conversely, if the captions feature is available from a drop-down menu that must first be activated (by a mouse click, for example), it will not be considered to be at the same level, as there will be an additional step to perform.",
  "4.15.1": "1. Identify the features that allow you to transmit (e.g. send content to another terminal or send a video by e-mail), convert (e.g. convert a video in .avi format to .mpg format) or record pre-recorded synchronised time-based media (e.g. record a video from a broadcasting platform onto your personal computer). \n2. Perform each of the functions (transmit, convert and record).\n3. For each function, check that the captions\n   - are always present;\n   - can be displayed;\n   - are correctly synchronised;\n   - retain their key features (for example, if the captions were coloured according to the speaker, the colours must be retained).\n4. If this is the case, the test is validated.",
  "4.16.1": "1. Identify the features for transmitting, converting or recording time-based media. For example: send content to another terminal or by email, convert an .avi format video into an .mpg format, record a video from a broadcasting platform on your personal computer.\n2. Perform each of the features (send, convert and record).\n3. For each feature, check whether audio description\n   - is present\n   - can be activated;\n   - is correctly synchronised:\n      - the sounds and words of the audio description do not overlap with those of the original soundtrack and do not cause perception and comprehension problems;\n      - the information conveyed in the audio description is given at the same time as the equivalent visual information appears.\n4. If this is the case, the test is validated.\n",
  "4.17.1": "1. Locate pre-recorded time-based media with captions.\n2. Define one or more caption presentation parameters from the customisation options provided by the operating system, for example: caption size, colour, border style, background colour, background opacity, etc. (Note: the standard does not give a precise list of parameters that must be defined, so the ability to modify a single caption characteristic is sufficient to make the criterion compliant).\n3. Check that the defined parameters are applied to the captions.\n4. If not, check the page to see if there is a function that allows you to change the presentation parameters of the captions (on the page or directly from the media player). \n5. Check that the defined parameters are applied to the captions.\n6. If this is the case, the test is validated.",
  "4.18.1": "1. Locate pre-recorded synchronised time-based media with subtitles.\n2. Check for the presence of an audio track that would be the vocalised version of the subtitles:\n\t1. activate the sound track;\n\t2. check that the vocalised subtitles correspond to the displayed subtitles.\n3. If not, check that there is a feature that allows you to voice subtitles:\n\t1. Text-to-speech. Some media players (e.g. <a href=\"https://ableplayer.github.io/ableplayer/\">AblePlayer</a> or <a href=\"https://videojs.com\">VideoJS</a>) offer the option of adding a description track in the form of a text file (similar in construction to a subtitle file with a [time stamp](#time-stamp)) that can be synthesised using the Web Speech API of browsers (this is known as text-to-speech, or TTS). By activating this feature, the browser reads the description. This feature can be used to provide a vocalised version of subtitles, and would therefore be considered a compliant implementation if properly documented for the user. To test it: \n\t\t1. activate the feature;\n\t\t2. start playing the multimedia content;\n\t\t3. check that the texts displayed by this means are vocalised.\n\t2. Description. Some media players (for example, <a href=\"https://ableplayer.github.io/ableplayer/\">AblePlayer</a> or <a href=\"https://player.support.brightcove.com/playback/using-screen-reader-brightcove-player.html\">BrightCove</a>) offer the option of integrating description tracks in the form of a text file (similar in construction to a subtitle file with a [time stamp](#time-stamp)) which is declared in the code using the <code>&lt;track&gt;</code> tag with the <code>kind=\"descriptions\"</code> attribute and whose final implementation has sufficient properties to enable them to be played back by screen readers (presence of the <code>aria-live</code> property, for example). This feature can be used to provide a version of the subtitles that can be vocalised by screen readers, and would therefore be considered a compliant implementation if it is properly documented for the user. To test it: \n\t\t1. activate the functionality;\n\t\t2. activate the screen reader;\n\t\t3. check that the texts displayed by this means are vocalised.\n4. If not \n\t1. activate the subtitles;\n\t2. activate the screen reader;\n\t3. check that the spoken subtitles match the displayed subtitles.\n5. Otherwise\n\t1. check for alternative media whose soundtracks contain voice-activated subtitles;\n\t2. check that the spoken subtitles match the displayed subtitles.\n6. If this is the case, the test is validated.",
  "5.1.1": "1. Find in the document the complex data tables (data table - `<table>` element or element with a WAI-ARIA `role=\"table\"` attribute - containing headers which are not distributed only on the first row and/or the first column of the grid or whose scope is not valid for the whole column or row).\n2. For each complex data table, check that there is a passage of text explaining the nature and structure of the table:\n   - either in the `<caption>` element;\n   - or in the `summary` attribute of the `<table>` element (in versions of HTML and XHTML prior to HTML 5);\n   - or in a passage of text linked to the table with the `aria-describedby` attribute.\n3. If this is the case for each complex data table, **the test is validated**.\n",
  "5.2.1": "1. Find in the document the summaries of complex data tables (as determined by test 5.1.1).\n2. For each summary, check that its content is relevant.\n3. If this is the case for each summary (of table) of complex data tables, **the test is validated**.\n",
  "5.3.1": "1. Find the layout tables in the document.\n2. For each layout table, check that\n   - The order in which the cells are accessed is consistent with the content.\n   - The `<table>` element has a WAI-ARIA `role=\"presentation\"` attribute.\n3. If this is the case for each layout table, **the test is validated**.\n",
  "5.4.1": "1. Find the data tables with a title in the document.\n2. For each title, check that it is provided by means of\n   - either a `<caption>` element;\n   - or a `title` attribute;\n   - or a WAI-ARIA `aria-label` attribute;\n   - or a WAI-ARIA `aria-labelledby` attribute referencing a passage of text.\n3. If this is the case for each data table title, **the test is validated**.\n",
  "5.5.1": "1. Find the data tables with a title in the document.\n2. For each title, check that it is relevant.\n3. If this is the case for each data table title, **the test is validated**.\n",
  "5.6.1": "1. Find the data tables in the document.\n2. For each column header that applies to the entire column, check that the column header is implemented using\n   - either a `<th>` element;\n   - or an element with a WAI-ARIA `role=\"columnheader\"` attribute.\n3. If this is the case for each column header applying to the entire column, **the test is validated**.\n",
  "5.6.2": "1. Find the data tables in the document.\n2. For each line header that applies to the whole line, check that the line header is implemented using\n   - either a `<th>` element;\n   - or an element with a WAI-ARIA `role=\"rowheader\"` attribute.\n3. If this is the case for each line header applying to the entire line, **the test is validated**.\n",
  "5.6.3": "1. Find the data tables in the document.\n2. For each header which does not apply to the entire row or column, check that the row header is implemented using a `<th>` element.\n3. If this is the case for each header which does not apply to the whole row or column, **the test is validated**.\n",
  "5.6.4": "1. Find the data tables in the document.\n2. For each cell associated with several headers, is it implemented using a `<th>` or `<td>` tag.\n3. If this is the case for each header that does not apply to the whole row or column, **the test is validated**.\n",
  "5.7.1": "1. Find the data tables in the document.\n2. For each header (`<th>` element) applying to the entire row or column, check that the `<th>` element has\n   - either a unique `id` attribute;\n   - or a `scope` attribute;\n   - or a WAI-ARIA `role=\"rowheader\"` or `\"columnheader\"` attribute.\n3. If this is the case for each header applying to the entire row or column, **the test is validated**.\n",
  "5.7.2": "1. Find the data tables in the document.\n2. For each header (`<th>` element) applying to the whole row or column and provided with a `scope` attribute, check that the `scope` attribute has\n   - either a `\"row\"` value for row headers;\n   - or a `\"col\"` value for column headers.\n3. If this is the case for each header which applies to the entire row or column and has an `scope` attribute, **the test is validated**.\n",
  "5.7.3": "1. Find the data tables in the document.\n2. For each header (`<th>` element) which does not apply to the whole row or column, check that the `<th>` element\n   - has a unique `id` attribute;\n   - does not have a `scope` attribute;\n   - does not have a WAI-ARIA `role=\"rowheader\"` or `\"columnheader\"` attribute.\n3. If this is the case for each header that does not apply to the entire row or column, **the test is validated**.\n",
  "5.7.4": "1. Find the data tables in the document.\n2. For each `<td>` or `<th>` element associated with one or more headers with an `id` attribute, check that\n   - the `<td>` or `<th>` element has a `headers` attribute;\n   - the `headers` attribute has the list of `id` attribute values for the associated headers.\n3. If this is the case for each `<td>` or `<th>` element associated with one or more headers with an `id` attribute, **the test is validated**.\n",
  "5.7.5": "1. Find the data tables in the document.\n2. For each header that applies to the entire row or column and has a WAI-ARIA `role=\"rowheader\"` or `\"columnheader\"` attribute, check that the element has\n   - either a WAI-ARIA `role=\"rowheader\"` attribute for row headers;\n   - or a WAI-ARIA `role=\"columnheader\"` attribute for column headers.\n3. If this is the case for each header that applies to the entire row or column and has a WAI-ARIA `role=\"rowheader\"` or `\"columnheader\"` attribute, **the test is validated**.\n",
  "5.8.1": "1. Find the layout tables in the document.\n2. For each layout table, check that\n   - The `<table>` element does not have a `summary` attribute, `<caption>`, `<thead>`, `<th>`, `<tfoot>` child elements or elements with a WAI-ARIA `role=\"rowheader\"` or `role=\"columnheader\"` attribute.\n   - `<td>` elements do not have `scope`, `headers` or `axis` attributes.\n3. If this is the case for each layout table, **the test is validated**.\n",
  "6.1.1": "1. Find the text links in the document.\n2. For each text link, check that the information used to understand the function and destination of the link is\n   - either the accessible name of the link alone;\n   - or the link context.\n3. If this is the case for each text link, **the test is validated**.\n",
  "6.1.2": "1. Find the image links in the document (link with the content of an `<img>` element or an element with the WAI-ARIA `role=\"img\"` attribute, an `<area>` element with a `href` attribute, an `<object>` element, a `<canvas>` element or a `<svg>` element).\n2. For each image link, check that the information used to understand its function and destination is\n   - either the accessible name of the link alone, provided by the text alternative (image);\n   - or the link context.\n3. If this is the case for each image link, **the test is validated**.\n",
  "6.1.3": "1. Find composite links in the document (links made up of both text content and image elements).\n2. For each composite link, check that the information used to understand the function and destination of the link is\n   - either the accessible name of the link alone, provided by the combination of the text content and the alternative text for the image;\n   - or the link context.\n3. If this is the case for each composite link, **the test is validated**.\n",
  "6.1.4": "1. Find SVG links in the document (`<svg>` element which has an `<a>` element with a `xlink-href` attribute (SVG 1.1) or `href` (SVG 2)).\n2. For each SVG link, check that what makes it possible to understand the function and destination of the link is\n   - either the accessible name of the link alone, provided by the accessible name of the `<svg>` element (generally resolved from the content of a `<text>` element);\n   - or the link context.\n3. If this is the case for each SVG link, **the test is validated**.\n",
  "6.1.5": "1. Find in the document links other than SVG whose content is provided both by a visible label and by the content of either a title attribute, an `aria-label` attribute or an `aria-labelledby` attribute.\n2. For each link, check that the value of the `title` attribute or the `aria-label` attribute or the `aria-labelledby` attribute contains the visible label.\n3. If this is the case for each link, **the test is validated** for links other than SVG.\n4. Find in the document the SVG links whose content is provided both by a visible label and by the content of either an `aria-labelledby` attribute, or an `aria-label` attribute or a title element (direct child of the `<svg>` element) or an x-link:title attribute (SVG 1.1) or one or more `<text>` elements.\n5. For each SVG link, check that the value of the `aria-labelledby` attribute or the `aria-label` attribute or the `<title>` element or the `x-link:title` attribute or one or more `<text>` elements contains the visible label.\n6. If this is the case for each SVG link, **the test is validated** for the SVG links.\n7. If the test is validated for both non-SVG links and SVG links, the test is validated overall.",
  "6.2.1": "1. Find any links in the document.\n2. For each link, check that the content of the `<a>` element (or of an element with a WAI-ARIA `role=link` attribute) contains an accessible name (text or alternative).\n3. If this is the case for each link, **the test is validated**.\n",
  "7.1.1": "1. Find all the user interface components generated or controlled using JavaScript in the document.\n2. Check that\n   - The component has a role consistent with its use (generally a button or a link).\n   - The component has an explicit name.\n   - The name of the component is consistent with the state of the feature or controlled content (for example, for a feature that displays or hides a content zone).\n3. If not, check that there is an accessible user interface component providing access to the same feature.\n4. If not, check for the presence of an accessible alternative providing access to the same feature.\n5. If this is the case, **the test is validated**.\n",
  "7.1.2": "1. For each user interface component that has passed test 7.1.1, check that the user interface component is correctly rendered (by assistive technologies).\n2. If not, check that an accessible alternative to the user interface component provides access to the same feature.\n3. If this is the case, **the test is validated**.\n",
  "7.1.3": "1. For each user interface component that has passed the 7.1.1 test, check that the user interface component has\n   - a relevant name (visible label);\n   - a relevant role.\n2. If the user interface component has an accessible name, check that this name is relevant and contains at least the visible label.\n3. If this is the case, **the test is validated**.\n",
  "7.2.1": "1. Find alternatives to JavaScript features\n2. Search the page for available alternatives to a JavaScript component or function.\n3. Deactivate JavaScript in the document and find the proposed alternatives.\n4. For each of the alternatives proposed, check that it provides access to the same content and similar functions.\n5. If this is the case, **the test is validated**.\n",
  "7.2.2": "1. Find all non-text elements in the document that have been updated by a JavaScript function.\n2. If the non-text element has an alternative, check that\n   - the alternative is updated when the non-text content is updated;\n   - the updated alternative is relevant.\n3. If this is the case, **the test is validated**.\n",
  "7.3.1": "1. Find in the document all the elements on which a JavaScript event handler is implemented (for example click, focus, mouseover, blur, keydown, touch, etc.).\n2. Check that the element can be accessed using the keyboard:\n   - It can be reached with the tab key.\n   - If the element manages a simple action, it can be activated from the keyboard using the enter key.\n   - If the element handles a complex action, it can be accessed from the keyboard (generally using the arrow keys).\n3. If not, check that the page contains an element that can be accessed from the keyboard to perform the same action.\n4. Check that the element can be accessed using any pointing device (mouse, touch, stylus, etc.).\n5. If not, check that the page contains an element that can be accessed using a pointing device and that performs the same action.\n6. If this is the case, **the test is validated**.\n",
  "7.3.2": "1. Activate, one after the other, all elements capable of receiving the focus.\n2. Check that the focus is not removed via a JavaScript function.\n3. If so, **the test is validated**.\n",
  "7.4.1": "1. Find all the JavaScript events in the document which initiate a change of context, for example\n   - dynamic updating of form fields;\n   - the opening of a new page when an option in a combobox is activated (`<select>` element);\n   - AJAX updating of an essential part of the page;\n   - automatic launch of a video player when a playlist is selected;\n   - focus manipulation to change the user's current position on the page.\n2. Check that\n   - the user is warned by a message about the script action and the type of change before it is triggered;\n   - or the change of context is initiated by an explicit button (input of the submit, button or image type or the button tag);\n   - or the change of context is initiated by an explicit link.\n3. If this is the case, **the test is validated**.\n",
  "7.5.1": "1. Find the messages in the document that are status messages.\n2. For each of these messages, determine the nature of the information contained in the message:\n3. If the message informs you of the success or result of an action, or the state of an application, check that the element containing the message\n   - either uses the WAI-ARIA `role=\"status\"` attribute;\n   - or uses the WAI-ARIA `aria-live=\"polite\"` and `aria-atomic=\"true\"` attributes.\n4. If the message presents a suggestion, or warns of the existence of an error, check that the element containing the message\n   - either uses the WAI-ARIA `role=\"alert\"` attribute;\n   - or uses the `aria-live=\"assertive\"` and `aria-atomic=\"true\"` attributes.\n5. If the message indicates the progress of a process, check that the element containing the message\n   - either uses one of the WAI-ARIA `role=\"log\"`, `role=\"progressbar\"` or `role=\"status\"` attributes;\n   - or use the WAI-ARIA `aria-live=\"polite\"` attribute if the intention is to report the equivalent of a `\"log\" role`;\n   - or use the WAI-ARIA `aria-live=\"polite\"` and `aria-atomic=\"true\"` attributes if the intention is to signal the equivalent of a `\"status\"` role.\n6. If this is the case, **the test is validated**.\n",
  "7.5.2": "Tests identical to 7.5.1\n",
  "7.5.3": "Tests identical to 7.5.1\n",
  "8.1.1": "",
  "8.2.1": "",
  "8.3.1": "1. Find the default language indication in the document.\n2. Check for the presence of a language indication\n   - either using the lang attribute on the html tag if the code is HTML5 or HTML4;\n   - or using the lang and xml:lang attributes on the html tag if the code is XHTML 1.0;\n   - or using the xml:lang attribute on the html tag if the code is XHTML 1.1;\n   - otherwise, check for the presence of a language indication on each text element or one of its parents.\n3. If this is the case, **the test is validated**.\n",
  "8.4.1": "1. The default language is indicated in the document.\n2. Check that the language code is\n   - valid (compliant with ISO 639-1 or ISO 639-2 and subsequent standards);\n   - relevant (indicating the main language of the document).\n3. If this is the case, **the test is validated**.\n",
  "8.5.1": "1. Find in the document the title implemented using a `<title>` element.\n2. If this is the case, **the test is validated**.\n",
  "8.6.1": "1. Find in the document the title implemented using a `<title>` element.\n2. Check whether the content of the `<title>` element is sufficiently relevant (it allows the page to be found in the browsing history or the list of tabs).\n3. If this is the case, **the test is validated**.\n",
  "8.7.1": "1. Find passages of text in a foreign language, with the exception of\n   - proper names;\n   - words of foreign origin, present in the dictionary of the language of the document;\n   - words of foreign origin in common usage whose pronunciation does not cause misunderstanding.\n2. Check that each passage of text selected has a language indication (`lang` and/or `xml:lang` attribute on the element itself or one of its parents).\n3. If this is the case, **the test is validated**.\n",
  "8.8.1": "1. For each passage of text validated in test 8.7.1, check that\n   - The language code is valid.\n   - The language indication is relevant.\n2. If this is the case, **the test is validated**.\n",
  "8.9.1": "1. Find in the document all the semantic elements used for presentation purposes\n2. For each of these elements, check that\n   - The element has a `role=\"presentation\"` attribute.\n   - The use of this element for presentation purposes remains justified.\n3. If this is the case, **the test is validated**.\n\nNote: Here are a few non-exhaustive examples of markup misuse: a `<div>` element used as a paragraph, a heading used as a legend, a `<blockquote>` element or empty paragraphs or even spaces used to create margin effects.\nThe use of a `role=\"presentation\"` is formally discouraged, but may be justified in rare cases. This may be acceptable on a `<blockquote>` element or an empty paragraph, but will be considered non-compliant on a heading.\n\nTables: note that this test deals with presentation tables, which should not appear in the Tables theme.\n",
  "8.10.1": "1. Find in the document passages of text that use a language that is read in the opposite direction to the document language (such as Arabic or Hebrew for French, for example).\n2. For each passage of text, check that the passage of text is contained in a tag which has a `dir` attribute.\n3. If this is the case for each passage of text, **the test is validated**.\n",
  "8.10.2": "1. For each passage of text validated in test 8.10.1, check that\n   - The reading direction is correct (ltr, for the direction \"left to right\" and rtl for the direction \"right to left\")\n   - The reading direction is relevant.\n2. If this is the case for each passage of text, **the test is validated**.\n",
  "9.1.1": "1. Find the headings in the document (`<hx>` tag or tag with a WAI-ARIA `role=\"heading\"` attribute associated with a WAI-ARIA `aria-level` attribute).\n2. Check that the hierarchy between the headings is appropriate.\n3. If this is the case, **the test is validated**.\n",
  "9.1.2": "1. For each heading identified in test 9.1.1, check that its content is relevant.\n2. If this is the case for each heading, **the test is validated**.\n",
  "9.1.3": "1. For each heading identified in test 9.1.1, check that\n   - either it is implemented using a `<hx>` tag (\"x\" designating a numerical value between 1 and 6);\n   - or it is implemented using a tag with a WAI-ARIA `role=\"heading\"` attribute and a WAI-ARIA `aria-level=x` attribute (\"x\" designating a numerical value).\n2. If this is the case for each heading, **the test is validated**.\n",
  "9.2.1": "1. Check that the header region is structured using a `<header>` element.\n2. Check that the main and secondary navigation areas are implemented using a `<nav>` element.\n3. Check that the `<nav>` element is not used outside the structuring of the main and secondary navigation zones.\n4. Check that the main content region is structured using a `<main>` element.\n5. If the document has several `<main>` elements, check that only one of these elements is visible (the other occurrences of the element have a `hidden` attribute).\n6. Check that the footer region is structured using a `<footer>` element.\n7. If this is the case for each content zone, **the test is validated**.\n",
  "9.3.1": "1. Find elements in the document that are visually grouped together in the form of an unordered list.\n2. For each list, check that the list is structured\n   - either using the elements `<ul>` and `<li>`;\n   - or using elements with WAI-ARIA attributes `role=\"list\"` and `role=\"listitem\"`.\n3. If this is the case for each unordered list, **the test is validated**.\n",
  "9.3.2": "1. Find elements in the document that are visually grouped together in the form of an ordered list.\n2. For each list, check that the list is structured\n   - either using the elements `<ol>` and `<li>`;\n   - or using elements with WAI-ARIA attributes `role=\"list\"` and `role=\"listitem\"`.\n3. If this is the case for each ordered list, **the test is validated**.\n",
  "9.3.3": "1. Find the elements in the document that are visually grouped together in the form of a description list.\n2. For each list, check that the list is implemented using the elements `<dl>`, `<dt>` and `<dd>`.\n3. If this is the case for each description list, **the test is validated**.\n",
  "9.4.1": "1. Find the short (or inline) quotations in the document.\n2. For each quotation, check that the quotation is implemented using a `<q>` element.\n3. If this is the case for each short quotation, **the test is validated**.\n",
  "9.4.2": "1. Find the quotation blocks in the document.\n2. For each quotation block, check that the quotation block is implemented using a `<blockquote>` element.\n3. If this is the case for each quotation block, **the test is validated**.\n",
  "10.1.1": "1. Check that the `<basefont>`, `<big>`, `<blink>`, `<center>`, `<font>`, `<marquee>`, `<s>`, `<strike>`, `<tt>` presentation elements are not present.\n2. Check for the absence of the `<u>` element only if the DOCTYPE of the document does not correspond to HTML 5.\n3. If this is the case, **the test is validated**.\n",
  "10.1.2": "1. Check that these presentation attributes are not present: `align`, `alink`, `background`, `bgcolor`, `border`, `cellpadding`, `cellspacing`, `char`, `charoff`, `clear`, `color`, `compact`, `frameborder`, `hspace`, `link`, `marginheight`, `marginwidth`, `text`, `valign`, `vlink`, `vspace`, `size` (with the exception of the `<select>` element), `width` (with the exception of the `<img>`, `<object>`, `<embed>`, `<canvas>` and `<svg>` elements), `height` (with the exception of the `<img>`, `<object>`, `<embed>`, `<canvas>` and `<svg>` elements).\n2. If this is the case, **the test is validated**.\n",
  "10.1.3": "1. Disable styles (CSS) in the document.\n2. Check that no spaces are used:\n   - between the letters of a word;\n   - to create margin or alignment effects;\n   - to simulate tables or columns.\n3. If this is the case, **the test is validated**.\n",
  "10.2.1": "1. Deactivate the styles (CSS) in the document.\n2. Compare the unstyled document with the formatted document.\n3. Check whether the visible content carrying information is still present in the unstyled document.\n4. If this is the case, **the test is validated**.\n",
  "10.3.1": "1. Deactivate the styles (CSS) in the document.\n2. Check that the order in which the content is implemented does not raise understanding issues.\n3. If this is the case, **the test is validated**.\n",
  "10.4.1": "1. Check in the document whether the text remains present and legible when\n   - The browser's text zoom is set to 200%.\n   - The browser's graphical zoom is set to 200%.\n   - The personalised zoom functions offered by the document are used.\n2. If this is the case, **the test is validated**.\n",
  "10.4.2": "1. Check in the document whether the text is actually enlarged when\n   - The browser's text zoom is set to 200%.\n   - The browser's graphical zoom is set to 200%.\n   - The personalised zoom functions offered by the document are used.\n2. If this is the case, **the test is validated**.\n",
  "10.5.1": "1. Find coloured text in the document, with the exception of default colours (e.g. links, etc.).\n2. Identify the element containing the text and check that there is a calculated value for the element's `background-color` property.\n3. If this is the case, **the test is validated**.\n",
  "10.5.2": "1. Find coloured text in the document, with the exception of default colours (e.g. links, etc.).\n2. Identify the element containing the text and check that there is a calculated value for the element's `color` property.\n3. If this is the case, **the test is validated**.\n",
  "10.5.3": "1. Find text in the document whose background is an image (`background-image` property).\n2. Identify the element containing the text and check that if the background image is missing, the text is still legible.\n3. If this is the case, **the test is validated**.\n",
  "10.6.1": "1. Find in the document link type elements (`<a>` element or element with a WAI-ARIA `role=\"link\"` attribute).\n2. For each link element, if it can be confused with normal text when indicated by colour alone, check that the contrast between the font colour of the link and the font colour of the surrounding text is at least 3:1.\n3. This check must be carried out for the different states of the link if they are presented using a different colour: the unvisited state, the visited state, the activated state, the hover state and the state when focused.\n4. If this is the case for each element of the link type, **the test is validated**.\n",
  "10.7.1": "1. Find in the document the elements which are likely to receive the focus (interface elements such as links or form controls, as well as any element with a `tabindex` attribute with a value equal to or greater than 1).\n2. For each element likely to receive the focus, check that the visual indication of when the focus is taken is present (by acting on the outline or background or both) and is sufficiently contrasted (contrast ratio equal to or greater than 3:1).\n3. If this is the case for each element likely to receive the focus, **the test is validated**.\n",
  "10.8.1": "1. Find hidden content (elements with the `hidden` attribute or the WAI-ARIA `aria-hidden` attribute, or a class or set of CSS styles likely to hide the content).\n2. For each hidden content, check that\n   - Either the hidden content is intended to be ignored by assistive technologies (a web analytics tracker for example).\n   - Or the hidden content is not intended to be ignored by the assistive technologies, in which case it is made renderable by the assistive technologies by means of\n     - Either an action performed by the user via the keyboard or any other pointing device on an element preceding the hidden content.\n     - Or a programming function that repositions the focus on the content.\n3. If this is the case for each hidden content item, **the test is validated**.\n",
  "10.9.1": "1. Find in the document the information for a text given by its shape, size or position.\n2. For each piece of information given by shape, size or position, check that there is another way of retrieving this information.\n3. If this is the case for each piece of information, **the test is validated**.\n",
  "10.9.2": "1. Find in the document the information for an image given by its shape, size or position.\n2. For each piece of information given by shape, size or position, check that there is another way of retrieving this information.\n3. If this is the case for each piece of information, **the test is validated**.\n",
  "10.9.3": "1. Find in the document the information for a time-based media given by its shape, size or position.\n2. For each item of information given by shape, size or position, check that there is another way of retrieving this information.\n3. If this is the case for each piece of information, **the test is validated**.\n",
  "10.9.4": "1. Find in the document the information for a non-time-based media given by its shape, size or position.\n2. For each item of information given by shape, size or position, check that there is another way of retrieving this information.\n3. If this is the case for each piece of information, **the test is validated**.\n",
  "10.10.1": "1. Find in the document the information for a text given by its shape, size or position.\n2. For each piece of information given by shape, size or position, check that the alternative means of retrieving this information is relevant, i.e. that it allows the information to be transmitted in all viewing contexts and for all users.\n3. If this is the case for each piece of information, **the test is validated**.\n",
  "10.10.2": "1. Find in the document the information for an image given by its shape, size or position.\n2. For each piece of information given by its shape, size or position, check that the alternative means of retrieving this information is relevant, i.e. that it allows the information to be transmitted in all viewing contexts and for all users.\n3. If this is the case for each piece of information, **the test is validated**.\n",
  "10.10.3": "1. Find in the document the information for a time-based media given by its shape, size or position.\n2. For each item of information given by shape, size or position, check that the alternative means of retrieving this information is relevant, i.e. that it allows the information to be transmitted in all viewing contexts and for all users.\n3. If this is the case for each piece of information, **the test is validated**.\n",
  "10.10.4": "1. Find in the document the information for a non-time-based media given by its shape, size or position.\n2. For each item of information given by shape, size or position, check that the alternative means of retrieving this information is relevant, i.e. that it allows the information to be transmitted in all viewing contexts and for all users.\n3. If this is the case for each piece of information, **the test is validated**.\n",
  "10.11.1": "1. Find the information and functions in the document if its content is designed to scroll vertically (the text reading direction is horizontal).\n2. Reduce the display window to a width of 320 px and check that the information and functions remain available without any horizontal scrolling.\n3. If this is the case, **the test is validated**.\n",
  "10.11.2": "1. Find the information and functions in the document if its content is designed to scroll horizontally (the text reading direction is vertical).\n2. Reduce the display window to a height of 256 px and check that the information and functions remain available without any vertical scrolling.\n3. If this is the case, **the test is validated**.\n",
  "10.12.1": "1. Modify the document styles by giving\n   - a value of 1.5 to the `line-height` property of all document elements;\n   - a value of 2em to the `margin-bottom` property of the `<p>` elements;\n   - a value of 0.12em for the `letter-spacing` property of all the elements in the document;\n   - a value of 0.16em for the `word-spacing` property of all the elements in the document.\n2. For each passage of text, check that it remains legible, with the exception of\n   - subtitles or captions directly integrated into a video;\n   - images of text;\n   - text within a `<canvas>` tag.\n3. If this is the case for each passage of text, **the test is validated**.\n\nNote: an implementation of these modification rules is available in the WCAG 1.4.12 success criteria resources (https://github.com/alastc/adaptation-scripts/blob/master/scripts/text-adaptation.js).\n",
  "10.13.1": "1. Find in the document any additional content that becomes visible when the user focuses or hovers over a user interface component, with the exception of\n   - Additional content controlled by the user agent (for example, tooltips associated with the `title` attribute or the native validation of a form.\n   - Additional content that becomes visible when activated by the user (for example, a dialog window).\n2. For each additional content item, check that\n   - Either the additional content is positioned in such a way that it does not interfere with the viewing of other information content on which it is superimposed (including the user interface component that triggered its appearance), whatever the viewing conditions (including when using a zoom mechanism).\n   - Or a mechanism (on the keyboard) can be used to make the additional content disappear (for example, the Escape key).\n3. If this is the case for each additional content item, **the test is validated**.\n",
  "10.13.2": "1. Find in the document the additional content that becomes visible when a user interface component is hovered over, with the exception of\n   - additional content controlled by the user agent (for example, tooltips associated with the title attribute or the native validation of a form);\n   - additional content that becomes visible when activated by the user (for example, a dialog window).\n2. For each additional content item, check that it can be hovered over with the mouse pointer without disappearing.\n3. If this is the case for each additional content item, **the test is validated**.\n",
  "10.13.3": "1. Find in the document additional content which becomes visible when the focus is set or when a user interface component is hovered over, with the exception of\n   - additional content controlled by the user agent (for example, tooltips associated with the `title` attribute or the native validation of a form);\n   - additional content that becomes visible when activated by the user (for example, a dialog window).\n2. For each additional content item, check that it remains visible\n   - until the user removes the mouse pointer or focus from the additional content or user interface component that triggered its appearance;\n   - until the user triggers the mechanism provided to make the additional content disappear;\n   - until the information provided by the additional content is no longer valid (for example, additional content indicating the \"busy\" state of the user interface component that the user wishes to activate, or an error message in the form of additional content until the user rectifies their input).\n3. If this is the case for each additional content item, **the test is validated**.\n",
  "10.14.1": "1. Find additional content in the document that becomes visible when a user interface component is hovered using a CSS mechanism (`pseudo-class :hover`).\n2. For each additional content, check that the additional content also appears\n   - When the component is activated using the keyboard or any other pointing device.\n   - When the component is focused.\n   - When another component is activated or focused.\n3. If this is the case for each additional content item, **the test is validated**.\n",
  "10.14.2": "1. Find in the document the additional content that becomes visible when the focus of a user interface component is activated using a CSS mechanism (pseudo-class `:focus`).\n2. For each additional content item, check that the additional content also appears:\n\n- When the component is activated using the keyboard or any other pointing device.\n- When the component is hovered over.\n- When another component is activated or hovered over.\n\n3. If this is the case for each additional content item, **the test is validated**.\n",
  "11.1.1": "1. Find form fields in the document.\n2. For each form field, check that the form field\n   - has a WAI-ARIA `aria-labelledby` attribute referencing an identified passage of text;\n   - has a WAI-ARIA `aria-label` attribute;\n   - is associated with a `<label>` element having a `for` attribute;\n   - has a `title` attribute;\n   - a button adjacent to the form field provides it with a visible label and a visually hidden `<label>` element or a WAI-ARIA `aria-label`, `aria-labelledby` or `title` attribute provides it with an accessible name.\n3. If this is the case for a form field, **the test is validated**.\n",
  "11.1.2": "1. Find the form fields associated with a `<label>` element in the document.\n2. For each form field, check that\n   - The form field has an `id` attribute.\n   - The value of the `for` attribute of the `<label>` element is equal to the value of the `id` attribute.\n3. If this is the case for the form field, **the test is validated**.\n",
  "11.1.3": "1. Find in the document form fields whose label is not visible or nearby (hidden, using the aria-label attribute) or is not attached to the field (using the `aria-labelledby` attribute).\n2. For each form field, check that the form field\n   - either has a `title` attribute, the content of which makes it possible to understand the nature of the expected input;\n   - is accompanied by a passage of text next to the field which becomes visible when the focus is taken, so that the nature of the expected input can be understood;\n   - is accompanied by a passage of visible text next to the field, enabling the nature of the expected input to be understood.\n",
  "11.2.1": "1. Find the form fields in the document whose label is provided by a `<label>` element.\n2. For each form field, check that the content of the element is relevant.\n3. If this is the case for each form field, **the test is validated**.\n",
  "11.2.2": "1. Find in the document the form fields whose label is provided by a `title` attribute.\n2. For each form field, check that the content of the attribute is relevant.\n3. If this is the case for each form field, **the test is validated**.\n",
  "11.2.3": "1. Find in the document the form fields whose label is provided by a WAI-ARIA `aria-label` attribute.\n2. For each form field, check that the content of the attribute is relevant.\n3. If this is the case for each form field, **the test is validated**.\n",
  "11.2.4": "1. Find in the document the form fields whose label is provided by a WAI-ARIA `aria-labelledby` attribute.\n2. For each form field, check that the content of the referenced passage of text is relevant.\n3. If this is the case for each form field, **the test is validated**.\n",
  "11.2.5": "1. Find in the document the form fields whose label is provided both by a visible label and by the content of either a `<label>` element, or a `title` attribute or a `aria-label` attribute or a `aria-labelledby` attribute.\n2. For each form field, check that the content of the `<label>` element or the `title` attribute or the `aria-label` attribute or the `aria-labelledby` attribute contains the visible label.\n3. If this is the case for each form field, **the test is validated**.\n",
  "11.2.6": "1. Find the form fields in the document whose visible label is provided by an adjacent button.\n2. For each form field, check that the visible content of the button is relevant.\n3. If this is the case for each form field, **the test is validated**.\n",
  "11.3.1": "1. Find in the document the form fields with the same function (for example, several address fields).\n2. For each form input field, check that the labels are consistent (they make it clear that the inputs are identical).\n3. If this is the case for each form field, **the test is validated**.\n",
  "11.3.2": "1. Find the form input fields with the same function in the set of web pages under consideration (for example the search engine input field or the newsletter registration input field).\n2. For each form input field, check that the labels are consistent (they make it clear that the inputs are identical).\n3. If this is the case for each form field on all the pages in question, **the test is validated**.\n",
  "11.4.1": "1. Find the form fields in the document.\n2. For each form field, check that it is adjacent to its label.\n3. If this is the case for each form field, **the test is validated**.\n",
  "11.4.2": "1. Find in the document form fields which are not `<input>` elements of type `checkbox` or `radio` or elements with a WAI-ARIA `role=\"checkbox\"`, `role=\"radio\"` or `role=\"switch\"` attribute.\n2. For each form field, check that the label is visually attached:\n   - Immediately above or to the left of the form field when the reading direction for the label language is left to right.\n   - Immediately above or to the right of the form field when the label's language reading direction is from right to left.\n3. If this is the case for each form field, **the test is validated**.\n",
  "11.4.3": "1. Find in the document form fields that are `<input>` of type `checkbox` or `radio` or elements with a WAI-ARIA `role=\"checkbox\"`, `role=\"radio\"` or `role=\"switch\"` attribute.\n2. For each form field, check that the label is visually attached:\n   - Immediately below or to the right of the form field when the reading direction of the label language is from left to right.\n   - Immediately below or to the left of the form field when the label's language reading direction is from right to left.\n3. If this is the case for each form field, **the test is validated**.\n",
  "11.5.1": "1. Find the related form controls in the document (for example, a group of identity information entries, a series of tick boxes, a date entry in several successive fields, etc.).\n2. For each group of form related form controls, check that these related form controls are grouped together:\n   - either in a `<fieldset>` element;\n   - or in an element with a WAI-ARIA `role=\"group\"` attribute;\n   - or in an element with a WAI-ARIA `role=\"radiogroup\"` or `\"group\"` attribute, in the case of `<input>` elements of type `radio` (or elements with a WAI-ARIA `role=\"radio\"` attribute).\n3. If this is the case for each group of form related form controls, **the test is validated**.\n",
  "11.6.1": "1. Find the groups of related form controls in the document.\n2. For each group of related form controls, check that\n   - If the grouping uses a `<fieldset>` element, the `<fieldset>` element has a `<legend>` element.\n   - If the grouping element uses a WAI-ARIA `role=\"group\"` or `\"radiogroup\"` attribute, it has a WAI-ARIA `aria-label` or `aria-labelledby` attribute.\n3. Otherwise, for each of the related form controls, check for the presence of\n   - either a title attribute to determine whether the field belongs to the field grouping;\n   - or an `aria-label` attribute to determine whether the field belongs to the field grouping;\n   - or an `aria-labelledby` attribute which references a passage of text used to determine whether the field belongs to the field grouping;\n   - or an `aria-describedby` attribute which references a passage of text used to determine whether the field belongs to the field grouping;\n4. If this is the case for each group of form fields or for each of the related form controls, **the test is validated**.\n",
  "11.7.1": "1. Find groups of related form controls in the document.\n2. For each group of related form controls in the form, or for each related form control that has a legend, check that the text in the legend is relevant.\n3. If this is the case for each group of form fields or for each of the related form controls, **the test is validated**.\n",
  "11.8.1": "1. Find the comboboxes in the document (element `<select>`).\n2. For each combobox offering groups of items of the same type, check that these items are grouped together using `<optgroup>` elements.\n3. If this is the case for each combobox offering groups of similar items, **the test is validated**.\n",
  "11.8.2": "1. In the document, find the combobox (`<select>` element) which have elements `<optgroup>`.\n2. For each `<optgroup>` element, check that it has a `label` attribute.\n3. If this is the case for each `<optgroup>` element, **the test is validated**.\n",
  "11.8.3": "1. In the document, find the comboboxes (`<select>` element) which have elements `<optgroup>` with a `label` attribute.\n2. For each `label` attribute, check that its content is relevant.\n3. If this is the case for each `label` attribute, **the test is validated**.\n",
  "11.9.1": "1. Find the buttons in a form in the document.\n2. For each button, check that its visible text and accessible name are relevant.\n3. If this is the case for each button, **the test is validated**.\n",
  "11.9.2": "1. Find the buttons in a form in the document.\n2. For each button, check that its accessible name contains at least its visible label.\n3. If this is the case for each button, **the test is validated**.\n",
  "11.10.1": "1. Find the mandatory form fields in the document.\n2. For each form field, check that before validating the form\n   - either a mandatory field indication is visible, identifying the field;\n   - or the field has an `aria-required=\"true\"` or `required` attribute.\n3. If this is the case for each mandatory form field, **the test is validated**.\n",
  "11.10.2": "1. Find in the document the mandatory form fields that have an `aria-required=\"true\"` or `required` attribute.\n2. For each form field, check that before validating the form\n   - either a mandatory field indication is visible and located in the label associated with the field;\n   - or a mandatory field indication is visible in the passage of text associated with the field.\n3. If this is the case for each mandatory form field which has an `aria-required=\"true\"` or `required` attribute, **the test is validated**.\n",
  "11.10.3": "1. Find in the document the error messages indicating that a mandatory field has not been entered.\n2. For each error message, check that\n   - either the error message is visible and allows the field concerned to be identified;\n   - or the mandatory field associated with the error message has an `aria-invalid=\"true\"` attribute.\n3. If this is the case for each error message indicating that a mandatory field has not been entered, **the test is validated**.\n",
  "11.10.4": "1. Find in the document the mandatory form fields which have an `aria-invalid=\"true\"` attribute.\n2. For each form field, check that\n   - either the error message indicating that the input is invalid is visible and located in the label associated with the field;\n   - or the error message indicating that the input is invalid is visible and located in the passage of text associated with the field.\n3. If this is the case for each mandatory form field which has an `aria-invalid=\"true\"` attribute, **the test is validated**.\n",
  "11.10.5": "1. Find in the document mandatory form fields with an associated instruction or indication of data type and/or format.\n2. For each form field, check that the instruction or indication of mandatory data type and/or format is visible before the form is validated:\n   - is visible and enables the field concerned to be identified;\n   - visible in the label or passage of text associated with the field.\n3. If this is the case for each mandatory form field with an associated instruction or indication of data type and/or format, **the test is validated**.\n",
  "11.10.6": "1. Find in the document error messages that provide an instruction or indication of data type and/or mandatory format for a field.\n2. For each error message, check that\n   - either the error message is visible and allows the field concerned to be identified;\n   - or the field associated with the error message has an `aria-invalid=\"true\"` attribute.\n3. If this is the case for each error message indicating that a mandatory field has not been entered, **the test is validated**.\n",
  "11.10.7": "1. Find in the document the form fields which have an `aria-invalid=\"true\"` attribute.\n2. For each form field, check that\n   - either an instruction or indication of data type and/or mandatory format is visible and located in the `<label>` element associated with the field;\n   - or an instruction or indication of data type and/or mandatory format is visible and located in the passage of text associated with the field.\n3. If this is the case for each form field which has an `aria-invalid=\"true\"` attribute, **the test is validated**.\n",
  "11.11.1": "1. Find the error messages in the document.\n2. For each error message, check that the expected data types and formats are suggested.\n3. If this is the case for each error message, **the test is validated**.\n",
  "11.11.2": "1. Find the error messages in the document.\n2. For each error message, check that examples of expected values are suggested.\n3. If this is the case for each error message, **the test is validated**.\n",
  "11.12.1": "1. Find in the document forms which modify or delete data, or which transmit answers to a test or examination, or whose validation has financial or legal consequences.\n2. For each form, check that the user can\n   - either modify or cancel data and carried out actions on this data after validation of the form;\n   - or check and correct the data before validating a form in several stages; or\n   - or have an explicit confirmation mechanism (for example, a checkbox or an additional step).\n3. If this is the case for each form found, **the test is validated**.\n",
  "11.12.2": "1. Find in the document the forms that modify or delete financial, legal or personal data.\n2. For each form, check that the user has\n   - either a mechanism for recovering deleted or modified data;\n   - or a mechanism for requesting explicit confirmation of the deletion or modification (for example, a tick box or an additional step).\n3. If this is the case for each form recovered, **the test is validated**.\n",
  "11.13.1": "1. Find in the document the form fields which relate to information about the user (surname, first name, telephone number, etc.).\n2. For each form field, check that\n   - The form field has an `autocomplete` attribute.\n   - The `autocomplete` attribute has a value from the <a rel=\"noreferrer noopener\" target=\"_blank\" title=\"list of possible values - new window\" href=\"https://www.w3.org/TR/html52/sec-forms.html#autofill-processing-model\">list of possible values</a>.\n   - The value indicated for the `autocomplete` attribute is relevant to the type of information expected.\n3. If this is the case for each form field found, **the test is validated**.\n",
  "12.1.1": "1. For each set of web pages on the site, check the presence of\n   - either a navigation menu and a site map;\n   - or a navigation menu and a search engine;\n   - or a search engine and a site map.\n2. If this is the case for each set of web pages on the site, **the test is validated**.\n",
  "12.2.1": "1. Select a sample page from the same set of web pages as the page being audited.\n2. Visually compare the two pages and check that the menu and navigation bars are always at the same place in the layout.\n3. Compare the source code (generated on the client side) of the two pages and check that the menu and navigation bars are always in the same relative order in the structure.\n4. If this is the case, **the test is validated**.",
  "12.3.1": "1. Check that the site map is representative of the general architecture of the site (see note).\n2. If this is the case, **the test is validated**.\n\nNote: A site map that is too complex or too deep is not recommended as an aid to navigation. Not all pages need to be included in the site map if they can be reached, for example, from the home page of a section or catalogue.\n",
  "12.3.2": "1. Check that all the links in the site map are working.\n2. If they are, **the test is validated**.\n",
  "12.3.3": "1. For all the links in the site map, check that they are up to date (neither out of date nor in error) and lead to the page indicated by their text.\n2. If this is the case, **the test is validated**.\n",
  "12.4.1": "1. Select a page from the sample belonging to the same set of web pages as the page being audited.\n2. Compare the source code (generated on the client side) of the two pages and check that the means of access to the site map is always the same (a link or a button, for example).\n3. If this is the case, **the test is validated**.\n",
  "12.4.2": "1. Select a page from the sample belonging to the same set of web pages as the page being audited.\n2. Visually compare the two pages and check that the means of access to the site map is always at the same place in the presentation.\n3. If this is the case, **the test is validated**.\n",
  "12.4.3": "1. Choose a page from the sample that belongs to the same set of web pages as the page being audited.\n2. Compare the source code (generated on the client side) of the two pages and check that the means of access to the site map is always at the same place in the structure (in relation to the relative order of the page elements, for example it is always at the top of the page).\n3. If this is the case, **the test is validated**.\n",
  "12.5.1": "1. Choose a page from the sample that belongs to the same set of web pages as the page being audited.\n2. Compare the source code (generated on the client side) of the two pages and check that the means of access to the search engine is always the same (a form field, for example).\n3. If this is the case, **the test is validated**.\n",
  "12.5.2": "1. Choose a page from the sample that belongs to the same set of web pages as the page being audited.\n2. Visually compare the two pages and check that the means of access to the search engine is always at the same place in the presentation.\n3. If this is the case, **the test is validated**.\n",
  "12.5.3": "1. Choose a page from the sample that belongs to the same set of web pages as the page being audited.\n2. Compare the source code (generated on the client side) of the two pages and check that the means of access to the search engine is always at the same place in the structure (in relation to the relative order of the page elements, for example it is always at the top of the page).\n3. If this is the case, **the test is validated**.\n",
  "12.6.1": "1. Find the content grouping zones in the document (header region, main navigation region, main content region, footer region and search engine region).\n2. For each zone, check that the zone\n   - either has a WAI-ARIA landmark role corresponding to its nature;\n   - or has a heading whose content makes it possible to understand the nature of the zone content;\n   - or can be hidden by means of a button directly preceding the zone in the order of the source code;\n   - or can be avoided by means of a skip link directly preceding the zone in the order of the source code;\n   - or can be reached using a bypass link, either visible by default, or visible when focused during tabbing.\n3. If this is the case for each content grouping zone, **the test is validated**.\n",
  "12.7.1": "1. Find in the document the main content region (indicated by the visible main content element).\n2. Check that the zone\n   - either can be avoided using a skip link directly preceding the zone in the source code order;\n   - or can be reached by means of a quick access link visible when focused by tabbing.\n3. If this is the case, **the test is validated**.\n",
  "12.7.2": "1. Find in the document the main content region (indicated by the visible main element).\n2. Check that the bypass or skip link to the zone is\n   - located at the same place in the presentation;\n   - always present in the same relative order in the source code (generated on the client side);\n   - visible when focused during tabbing;\n   - functional.\n3. If this is the case, **the test is validated**.",
  "12.8.1": "1. Tab forward (Tab key) and backward (Shift+Tab key) through all the content in the document.\n2. Check that the order in which the focus is moved is consistent with the content in question (for example, the navigation sequence in a modal window should only consider the interface elements present in this window).\n3. If this is the case, **the test is validated**.\n\nNote: the navigation sequence does not have to follow the natural reading order (left to right and top to bottom, for example) as long as the elements are accessible in a coherent order.\n",
  "12.8.2": "1. Find all the content inserted in the document using a script (display hidden elements, update content using AJAX for example).\n2. Position the tab on the trigger element and activate it.\n3. After displaying the updated content, check that the navigation sequence remains consistent (correct repositioning of the focus).\n4. If this is the case, **the test is validated**.\n",
  "12.9.1": "1. Find all the interface elements in the document that can receive focus (using the tab key or a script).\n2. For each interface element, check that the user can move to the next or previous element that can receive focus\n   - either using the tab key (<kbd>Tab</kbd> or <kbd>Shift+Tab</kbd>);\n   - or by means of another keyboard interaction of which the user is aware (for example, the arrow keys).\n3. If this is the case for each interface element, **the test is validated**.\n\nNote: some complex interface elements, such as a group of radio buttons, a listbox and all the components developed with WAI-ARIA call for optimised navigations which generally use the arrow keys to move from one part of the component to another. For example, in a group of radio buttons, the options can be navigated using the arrow keys. Similarly, in a tabbed system, the user activates the tabs using the arrow keys. The test on the keyboard trap is then limited to checking that the component is reached with the tab key and that it is possible to move on to the next component or return to the previous component.\n",
  "12.10.1": "1. Find in the document all the keyboard shortcuts available to the user\n2. For each keyboard shortcut, check that\n   - either a mechanism is available to deactivate the keyboard shortcut;\n   - or a mechanism is available for configuring the keyboard shortcut using the modifier keys (Ctrl, Alt, Shift, etc.);\n   - or, in the case of a user interface component, the associated keyboard shortcut can only be activated if the keyboard focus is on this component.\n3. If this is the case for each keyboard shortcut, **the test is validated**.\n",
  "12.11.1": "1. Find in the document all the additional content that appears when hovering, focusing or activating a user interface component.\n2. For each additional content item, if it contains user interface components that the user can interact with using the keyboard (for example, a customised tooltip with a link in its content), check that these user interface components can be reached using the keyboard.\n3. If this is the case for each additional content item, **the test is validated**.\n",
  "13.1.1": "1. Find in the document the refreshes initiated in the content by an `<object>`, `<embed>`, `<svg>`, `<canvas>` element or by a `<meta http-equiv=\"refresh\" content=\"[compteur]\">` element (in the `<head>` element of the page).\n2. For each refresh, check that\n   - either there is a mechanism allowing the user to stop and restart the refresh;\n   - or a mechanism is present which allows the user to increase the time limit between two refreshes by at least ten times;\n   - or the presence of a mechanism which warns the user of the imminence of the refreshment, allows the user at least 20 seconds to increase the time limit before the next refreshment;\n   - or the time limit between two refreshes is at least twenty hours.\n3. If this is the case, **the test is validated**.\n",
  "13.1.2": "1. In the document, find an automatic redirect initiated by a `<meta http-equiv=\"refresh\" content=\"0;URL='[targeted URL]'\" />` element.\n2. Check that the redirect is immediate.\n3. If this is the case, **the test is validated**.\n",
  "13.1.3": "1. Find in the document the automatic redirects initiated by a script (in the form of a countdown for example).\n2. For each automatic redirect, check that\n   - Either there is a mechanism enabling the user to stop and restart the redirect.\n   - Or the presence of a mechanism allows the user to increase the time limit before refreshment by at least ten times.\n   - Or the presence of a mechanism, that warns the user of the imminence of the refreshment, gives the user at least 20 seconds to increase the time limit before the next refreshment.\n   - Or the time limit before the redirect is at least twenty hours.\n3. If this is the case, **the test is validated**.\n",
  "13.1.4": "1. Find in the document the procedures for limiting the time of a session (for example, after authentication).\n2. For each process, check that\n   - either the presence of a mechanism allows the user to remove the time limit;\n   - or the presence of a mechanism allows the user to increase the time limit;\n   - or the time limit is at least twenty hours.\n3. If this is the case, **the test is validated**.",
  "13.2.1": "1. Check that no new window (pop-up or pop-under, for example) is opened when the document is opened.\n2. If this is the case, **the test is validated**.\n",
  "13.3.1": "1. Find in the document the links and form controls (a form button or download form, for example) allowing to you to download a file in office format.\n2. For each file in office format, check the presence of an alternative version presented as accessible:\n   - For documents in .pdf format, check compliance with the [PDF accessibility assessment framework (RAPDF)](../rapdf1/index.html).\n   - For documents in .doc or .docx format, analyse the file with the Microsoft Office accessibility checker (from version 2010) and check that there are no accessibility errors (see note).\n   - For documents in .odt format, analyse the document with the LibreOffice accessibility checker (from version 7.0).\n   - For documents in EPUB/DAISY format, analyse the document with an EPUB/DAISY editor.\n   - For documents in .html format, analyse the accessibility of the document.\n3. If this is the case for each file in office format, **the test is validated**.\n\nNote on Microsoft Office: the software offers an accessibility checker as standard (accessible via the \"File &gt; Information &gt; Check for problems &gt; Check accessibility\" menu).\n\nNote on LibreOffice: the software offers an accessibility checker as standard, accessible via the \"Tools &gt; Accessibility Check\" menu. \n\nNote on the EPUB format: the Ace by DAISY App tool enables you to validate an EPUB 3 file efficiently.\n",
  "13.4.1": "1. In the document, find the files available to download in office format, together with their alternative accessible version.\n2. For each pair of files, open both documents (the original document and the accessible document) and check that both documents provide the same information.\n3. If this is the case for each pair of files, **the test is validated**.\n",
  "13.5.1": "1. Find cryptic content in the document (ASCII art, emoticon, cryptic syntax).\n2. For each cryptic content, check that\n   - either a definition is available by means of a `title` attribute, on a link, a form control, an abbreviation (`<abbr>` element) for example;\n   - or a definition is given in the adjacent context (immediately before or after).\n3. If this is the case for each cryptic content, **the test is validated**.\n",
  "13.6.1": "1. Find cryptic content in the document (ASCII art, emoticon, cryptic syntax).\n2. For each cryptic content, check that the definition given is relevant.\n3. If this is the case for each cryptic content, **the test is validated**.\n",
  "13.7.1": "1. Find in the document content which flashes or causes flash effects of the animated image, video (see note) or animation type (`<img>`, `<svg>`, `<canvas>`, `<embed>`, `<object>` or `<video>` elements).\n2. For all content that flashes or causes flash effects, check that\n   - either the frequency of the effect is less than 3 per second;\n   - or the total surface area is less than 21824 pixels.\n3. If this is the case for each content item that flashes or causes flash effects, **the test is validated**.\n\nNote: assessing this criterion can be complex. When the effect is managed by a script or using CSS, analysis of the code is sufficient. The PEAT tool can be used to analyse videos in .avi format, for example. An example of a video that caused epileptic seizures can be found here: [London 2012 Olympics Seizure](https://www.youtube.com/watch?v=vs0hfhSje9M).\n",
  "13.7.2": "1. Find in the document the content that flashes or causes flash effects using a script.\n2. For each content item that flashes or causes flash effects, check that\n   - either the frequency of the effect is less than 3 per second;\n   - or the total surface area is less than 21824 pixels.\n3. If this is the case for each content item that flashes or causes flash effects, **the test is validated**.\n",
  "13.7.3": "1. Find content in the document that flashes or causes flash effects using CSS animation.\n2. For each piece of content that flashes or causes flash effects, check that\n   - either the frequency of the effect is less than 3 per second;\n   - or the total surface area is less than 21824 pixels.\n3. If this is the case for each content item that flashes or causes flash effects, **the test is validated**.\n",
  "13.8.1": "1. Find moving content in the document (obtained using an image, script or CSS effect) triggered automatically when the page is loaded or when content is displayed (see note).\n2. For each content item, check that\n   - either the duration of the movement is less than 5 seconds;\n   - or there is a mechanism (a button, for example) to stop and restart the movement;\n   - or either the presence of a mechanism (such as a button) means that the moving content can be hidden and displayed again;\n   - or the presence of a mechanism (e.g. a button) enables the entire content to be displayed without movement.\n3. If this is the case for each piece of moving content, **the test is validated**.\n",
  "13.8.2": "1. Find blinking content in the document (obtained using an image, a script or a CSS effect) triggered automatically when the page is loaded or when content is displayed (see note).\n2. For each content item, check that\n   - either the blinking time is less than 5 seconds;\n   - there is a mechanism (a button, for example) to stop and restart the blinking;\n   - or the presence of a mechanism (a button, for example) means that the blinking content can be hidden and displayed again;\n   - or a mechanism (such as a button) can be used to display all the blinking content.\n3. If this is the case for each blinking content item, **the test is validated**.\n\nNote: Stopping or pausing moving or blinking content by means of when focused (for example, the effect is only suspended when focused) is not considered a compliant process. In some cases, movement cannot be stopped, for example in the case of a progress bar, in which case the criterion is not applicable.\n",
  "13.9.1": "1. View the document in portrait mode and then in landscape mode.\n2. Check that\n   - the document can be viewed in any screen orientation;\n   - the displayed content remains the same whatever the screen orientation mode used, even though its presentation and the means of accessing it may differ.\n3. If this is the case, **the test is validated**.",
  "13.10.1": "1. Find in the document the features that can be used or made available by means of a multi-point touch interaction.\n2. For each function, check that it is still available using touch interaction at a single point on the screen (for example, the ability to consult the items in a list using a horizontal right or left swipe should also be available using the \"previous\" and \"next\" buttons, or a pinch and zoom gesture that can be performed alternately using the \"plus\" and \"minus\" buttons).\n3. If this is the case for each function that can be used or is available by means of multi-touch interactions, **the test is validated**.\n",
  "13.10.2": "1. Find in the document the features that are usable or available by means of a touch interaction that involves following a particular path on the screen.\n2. For each feature, check that it is still available by means of touch-type interaction at a single point on the screen (for example, the ability to enter a password by following a path on a virtual keyboard should also be available by means of successive presses on the keyboard keys).\n3. If this is the case for each functionality that can be used or is available by means of touch interaction that involves following a particular path on the screen, **the test is validated**.",
  "13.11.1": "1. Find in the document the actions triggered by a pointing device on a single point on the screen.\n2. For each action, check that\n   - either the action is triggered when the pointing device is released;\n   - or the action is triggered when the pointing device is pressed or put down and then cancelled when the pointing device is released;\n   - or there is a mechanism for aborting (before completion of the action) or cancelling (after completion) the execution of the action. For example, during a drag-and-drop interaction, releasing the pointing device should allow the current interaction to be aborted, and once the drop zone has been reached, the user should still be able to cancel the drop operation by means of a confirmation dialogue (choice of confirming or cancelling the drop) or by being able to return the dropped item to its initial position.\n3. If this is the case for each action triggered by a pointing device on a single point on the screen, **the test is validated**.\n",
  "13.12.1": "1. Find the functions available by moving the device in the document.\n2. For each function, check that it can be achieved using user interface components.\n3. If this is the case for each function available by moving the device, **the test is validated**.\n",
  "13.12.2": "1. Find in the document the features available by gesturing towards the device.\n2. For each function, check that it can be performed using user interface components.\n3. If this is the case for each feature available by gesturing towards the device, **the test is validated**.\n",
  "13.12.3": "1. Find in the document the features available by moving the device.\n2. Check whether the user can disable motion detection.\n3. If so, for each feature, check that it cannot be triggered.\n4. If this is the case for each feature available by setting the device in motion, **the test is validated**.",
  "13.13.1": "This applies to all digital formats such as text, audio and video.\n\n1. Locate the document conversion functions on the page (export to PDF, .odt, HTML, etc.).\n2. Identify accessibility information in the original content (alternative graphic elements, heading levels, table of contents, etc.).\n3. Check that the accessibility information is still present in the converted document (unless the conversion format chosen does not support the accessibility information in the source document).\n4. If this is the case, the test is validated.",
  "13.14.1": "1. Find the identification (authentication) and control functions on the page that use biological characteristics (voice recognition, fingerprint, facial recognition, etc.).\n2. Check that there is an alternative method of performing the action: \n\t- For an authentication feature that uses fingerprint recognition, a button is available on the login page to access password entry.\n\t- For an authentication function that uses voice recognition, the website also offers fingerprint recognition.\n3. If this is the case, the test is validated.\n\nIf the alternative method also relies on a biological characteristic, it is essential that it does not use a similar biological characteristic. For example, if the initial method is based on voice, the alternative method must not use voice.",
  "14.1.1": "1. Identify the presence of documentation.\n2. Check for the presence of accessibility features.\n3. Check that the documentation contains \n\t- a description of the accessibility features provided by the website;\n\t- explanations of how to use these features (where they are located, how to activate them);\n\t- a description of the complex components for which special management has been set up according to assistive technologies;\n\t- a description of elements that do not comply or are not compatible with certain assistive technologies, and the presence of alternatives where appropriate.\n4.\tIf this is the case, the test is validated.",
  "14.2.1": "1. Identify the accessibility features described in the documentation. For example, you can \n\t- access a version of the content in simplified language;\n\t- enlarge text size.\n2. Check that the users concerned by each accessibility feature are able to access it. For example:\n\t- Alternative version in simplified language: the mechanism or set of mechanisms that enable the feature to be activated must be understandable and identifiable by a person who benefits from simplified language (for example, using the <a href=\"https://www.inclusion-europe.eu/easy-to-read/\">\"Easy to read\" logo</a> to identify the mechanism is a compliant solution).\n\t- Larger font size: if the mechanism contains text, then the text must be displayed by default with a font size equivalent to 200% of the initial font size.\n3. Check that it is possible to activate this feature.\n4. If so, the test is validated.",
  "14.3.1": "1. Identify the presence of documentation in web format (HTML, CSS).\n2. Check that each piece of documentation conforms to the [RAWeb](../raweb1/criteres.html).\n3. If it does, the test is validated.",
  "14.3.2": "1. Identify the presence of documentation in PDF format.\n2. Check that each item of documentation complies with the [RAPDF](../rapdf1/index.html).\n3. If this is the case, the test is validated.",
  "14.3.3": "1. Identify the presence of documentation in non-web format (other than PDF).\n2. Check that each item of documentation complies with the criteria in [section 10 Non-web documents](https://www.etsi.org/deliver/etsi_en/301500_301599/301549/03.02.01_60/en_301549v030201p.pdf#page=52) of European standard EN 301 549 v3.2.1.\n3. If this is the case, the test is validated.",
  "15.1.1": "1. Identify the editing functions in the tool (for example, a text editor, but it could also be a media library or any other interface making it possible to enter text or define properties) that allow you to create content in web format (HTML, CSS).\n2. Check that it is possible to define the accessibility information needed to make the content compliant with [RAWeb](../raweb1/index.html). For example \n\t- defining the text alternative for an image from the text editor or a media library;\n\t- defining the accessible name of a link;\n\t- etc.\n3. If this is the case, the test is validated.",
  "15.1.2": "1. Identify the editing functions in the tool (for example, a text editor, but it could also be a media library or any other interface making it possible to enter text or define properties) that allow you to create content in PDF format.\n2. Check that it is possible to define the accessibility information needed to make the content compliant with [RAPDF](../rapdf1/index.html). For example \n\t- defining the text alternative for an image from the text editor or a media library;\n\t- defining the accessible name of a link;\n\t- etc.\n3. If this is the case, the test is validated.",
  "15.1.3": "1. Identify the editing features in the tool (for example, a text editor, but it could also be a media library or any other interface making it possible to enter text or define properties) that allow you to create content in non-web format (other than PDF).\n2. Check that it is possible to define the accessibility information required to make the content compliant with the criteria of [section 10 Non-web documents](https://www.etsi.org/deliver/etsi_en/301500_301599/301549/03.02.01_60/en_301549v030201p.pdf#page=52) of European standard EN 301 549 v3.2.1. For example \n\t- defining the text alternative for an image from the text editor or a media library;\n\t- defining the accessible name of a link;\n\t- etc.\n3. If this is the case, the test is validated.",
  "15.2.1": "1. Identify in the tool the presence of aids for creating accessible content. This could be \n\t- automatic or semi-automatic tests available from the editing functions;\n\t- other automatic tools (a chatbot, for example);\n\t- documentation that explains how to define accessibility properties for each content item;\n\t- manual tests available from the editing functions to guide authors in detecting errors.\n2. Check that the help with creating accessible content is relevant, i.e. that the results or indications it gives can be used to create accessible content.\n3. If this is the case, the test is validated.\n",
  "15.3.1": "1. From the editing functions (a text editor, but it can also be a media library or any other interface that lets you enter text or define properties), enter the types of content proposed by the editor (heading, list, table, image, etc.). Also use the various parameters for defining accessibility information (enter the text alternative for an image, add a description to a link, etc.)\n2. Save your entries.\n3. View the generated content \n\t- in the editing functionality (for example, in the text editor);\n\t- and in the content publication interface (for example, the publication web page).\n4. For each piece of content in web format (HTML, CSS), check \n\t- that the information required for it to comply with the [RAWeb](../raweb1/index.html) (e.g. alternative image, heading levels) is preserved in the generated content.\n\t- that the information, if restructured, remains compatible with assistive technologies (for example, if the author enters an HTML table and, after saving, the tool linearises the table, the restructured information must be understandable to users of assistive technologies as it would have been in its original form).\n5. For each content item in PDF format, check \n\t- that the information required for it to comply with the [RAPDF](../rapdf1/index.html) (e.g. alternative image, heading levels) is preserved in the generated content.\n\t- that the information, if restructured, remains compatible with assistive technologies (for example, if the author enters a table and, after saving, the tool linearises the table, the restructured information must be understandable to users of assistive technologies as it would have been in its initial form).\n6. For all content in non-web format that is not PDF, check \n\t- the information required to comply with [section 10 Non-web documents](https://www.etsi.org/deliver/etsi_en/301500_301599/301549/03.02.01_60/en_301549v030201p.pdf#page=52) of European standard EN 301 549 v3.2.1 is preserved in the generated content.\n\t- that the information, if restructured, remains compatible with assistive technologies (for example, if the author enters a table and, after saving, the tool linearises the table, the restructured information must be understandable to users of assistive technologies as it would have been in its initial form).\n7. If this is the case, the test is validated.\n",
  "15.4.1": "1. Identify the presence of automatic or semi-automatic test functions in the tool.\n2. Generate content (web and non-web) with the editing tool with accessibility errors.\n3. Activate the test functions.\n4. Check \n\t- that the tool automatically repairs the error (automatic test);\n\t- or that the tool provides the author with repair suggestions (semi-automatic test).\n5.\tIn the case of a semi-automatic test, check \n\t- that the tool provides decision support and repair suggestions;\n\t- or that the tool provides the author with explanations on how to carry out the repair.\n6.\tIf this is the case, the test is validated.",
  "15.5.1": "1. Check for the presence of templates in web format (HTML, CSS) provided by the editing tool.\n2. Check that at least one template meets all the [RAWeb](../raweb1/index.html) criteria.\n5. If this is the case, the test is validated.",
  "15.5.2": "1. Check for the presence of templates in PDF format provided by the editing tool.\n2. Check that at least one template meets all the [RAPDF](../rapdf1/index.html) criteria.\n5. If this is the case, the test is validated.",
  "15.5.3": "1. Identify the presence of templates in non-web format (excluding PDF) made available by the editing tool.\n2. Check that at least one template meets all the criteria of [section 10 Non-web documents](https://www.etsi.org/deliver/etsi_en/301500_301599/301549/03.02.01_60/en_301549v030201p.pdf#page=52) of European standard EN 301 549 v3.2.1.\n5. If this is the case, the test is validated.",
  "15.6.1": "1. Identify the presence of templates that fully comply with the digital accessibility rules provided by the editing tool.\n2. Check that they are clearly marked so that they can be identified. For example, in the list of templates, compliant templates will have an \"accessible template\" label.\n3. If this is the case, the test is validated.",
  "16.1.1": "1. Find out whether a support service is available on the website.\n2. If so, check the website for documentation.\n3. Check the documentation for \n\t- a description of the accessibility features offered by the website;\n\t- a description of the complex components for which special management has been set up according to assistive technologies;\n\t- explanations of how to use these features (where they are located, how to activate them);\n\t- a description of elements that do not comply or are not compatible with certain assistive technologies, and the presence of alternatives where appropriate.\n4. Check that the help desk provides information about these features.\n5. If so, the test is validated.",
  "16.2.1": "1. Identify the presence of a support service on the website.\n2. If so, check that the support service can be used by all people with disabilities. It may be useful to search the website documentation to find this information. For example, if the support service is available from a telephone number, check that there are alternative means for users who have little or no access to spoken language (people who are deaf or hard of hearing) or who cannot use verbal language (people with aphasia). For example \n\t- an e-mail address or an online form;\n\t- instant messaging;\n\t- the provision of simultaneous written or visual translation of oral or audio information, or the provision of a sign language interpreter (use of a relay service).\n3. If this is the case, the test is validated.\n",
  "16.3.1": "1. Identify the presence of documentation provided by the help desk.\n2. For each item of documentation, check \n\t- if it is a web page (HTML, CSS), that it complies with the [RAWeb](../raweb1/criteres.html);\n\t- if it is an office document in PDF format, that it complies with the [PDF accessibility assessment framework (RAPDF)](../rapdf1/index.html);\n\t- in the case of a non-web document that is not in PDF format, that it complies with the criteria of [section 10 Non-web documents](https://www.etsi.org/deliver/etsi_en/301500_301599/301549/03.02.01_60/en_301549v030201p.pdf#page=52) of European standard EN 301 549 v3.2.1.\n3.\tIf this is the case, the test is validated.",
  "17.1.1": "1. Activate the web application and launch a call between the two devices.\n2. Check that the quality of oral activity with the web application is at least equivalent to the quality of oral activity during a call with a landline telephone.\n3. If the test is unsatisfactory (e.g. poor understanding of certain words spoken by the caller, presence of extraneous noise, etc.), check the application documentation to ensure \n   1. the presence of a reference to the implementation of [ITU-T Recommendation G.722](https://www.itu.int/rec/T-REC-G.722/en); \n   2. or the presence of a reference to the use of the [WebRTC API opus codec](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/WebRTC_codecs); \n   3. or the presence of a reference to the use of encoding and decoding with a frequency greater than or equal to 7,000 Hz.\n4. Otherwise, it is recommended that you ask the application publisher to provide these technical details, in particular by asking whether the web application implements, for example, [ITU-T Recommendation G.722](https://www.itu.int/rec/T-REC-G.722/en) or uses the [WebRTC API opus codec](https://developer.mozilla.org/en-US/docs/Web/Media/Formats/WebRTC_codecs).\n5. If this is the case, the test is validated.",
  "17.2.1": "1. Check that the web application allows two-way voice communication.\n2. If this is the case, check that a real-time text (RTT) function is available (it may sometimes be necessary to activate a dedicated parameter in the application to enable real-time text (RTT)).\n3. If not, check whether the web application can connect to a terminal with real-time text (RTT) functionality. This assessment can be complex to carry out without the availability of a real-time communication terminal or if the network used by the terminal does not support real-time text protocols. A first step may be to search the documentation or ask the application editor directly.\n4. If this is the case, the test is validated.",
  "17.3.1": "1. Check that the web application allows two-way voice communication.\n2. If so, check that real-time text (RTT) communication is available.\n3. If this is the case, check that it is possible to use both modes of communication at the same time, i.e. that it is possible for the same user to speak and use the real-time text (RTT) system simultaneously.\n4. If this is the case, the test is validated.\n",
  "17.4.1": "1. Activate the web application and the application's real-time text (RTT) functionality on two terminals and connect them to the same session.\n2. Send a text message from both terminals to obtain messages with different statuses (sent and received).\n3. Check that \n\t- sent and received messages are visually separated (for example, sent messages are in one window and received messages in another, or there is a line break between each received and sent message if they are presented in the same window);\n\t- it is visually possible to distinguish between messages sent and messages received. For example, by a layout or colour that differentiates them or by a visible text annotation (look for the words \"Sent\" near a message that has been sent or \"Received\" near a message that has been received);\n\t- information about the nature of the message (received or sent) is accessible to assistive technologies (text information is available to provide this information).\n4. If this is the case, the test is validated.",
  "17.4.2": "1. Activate the web application and the application's real-time text (RTT) functionality on two terminals and connect them to the same session.\n2. Send a written message from both terminals to get messages from different authors.\n3. Check that the authors of the text messages are identified (for example, the presence of a name or identifier preceding the message).\n4. If this is the case, the test is validated.",
  "17.5.1": "1. Check that the web application allows two-way voice communication and real-time text (RTT) communication.\n2. If this is the case, activate the web application on two terminals and connect them to the same session.\n3. Have a user speak from one of the terminals.\n4. Check that a visual indicator appears on the interface to identify that a person is speaking. It is not necessary for this criterion to identify who is speaking, but simply to identify that there is a person speaking. For example, a halo around or an icon near the avatar of the person speaking.\n5. If this is the case, the test is validated.",
  "17.5.2": "1. Check that the web application allows two-way voice communication and real-time video streaming.\n2. If this is the case, activate the application on two devices and connect them to the same session.\n3. Have a user speak from one of the devices.\n4. Check that a visual indicator appears on the interface to identify that a person is speaking. It is not necessary for this criterion to identify who is speaking, but simply to identify that there is a person speaking. For example, a halo around or an icon near the avatar of the person speaking.\n5. If this is the case, the test is validated.",
  "17.6.1": "This criterion is very complex to assess and requires a certain mastery of all interoperability concepts and standards. \n\nWe recommend asking the application publisher to check that all the requirements described in criterion 6.2.3 Interoperability of European standard EN 301 549 are met.",
  "17.7.1": "1. Check that the web application allows real-time text (RTT) communication.\n2. If it does, activate the web application and the written communication functionality on two separate terminals and connect them to the same session.\n3. Enter text on the first terminal and observe its appearance on the second terminal. The appearance on the second terminal must be instantaneous (less than half a second). Depending on how the functionality is set up, each character is not sent individually. In fact, if the real-time text (RTT) communication functionality implements word prediction, it is when the desired word is selected that it is sent, and not when the first characters used to trigger the suggestion display are entered. A simple observation test may be sufficient to observe the instantaneous appearance on the terminal receiving the written message.\n4. If this is the case, the test is validated.\n",
  "17.8.1": "1. Activate the web application from a terminal.\n2. From a second terminal, launch a call to the first terminal.\n3. When the incoming call appears, check \n\t- that the caller identification is visually available in the form of text of an understandable nature (for example, a name or telephone number);\n\t- that this identification is compatible with assistive technologies: for example, by using a relevant status message.\n4. If this is the case, the test is validated.",
  "17.9.1": "1. Activate the web application and launch a video call between the two devices.\n2. Initiate a spoken activity, and check that the second device has information to identify this activity (for example, the presence of a coloured halo around the thumbnail of the person being spoken to). \n3. If this is the case \n\t- look for the presence of a manual mechanism (e.g. a button) that would allow the person signing to indicate that they are signing;\n\t- if not, perform gestures in front of the camera (see note) and check that information is automatically displayed to identify this visual activity.\n4. If this is the case, the test is validated.\n\n\n**Note:** In communication applications, the identification of an oral activity is not based on the identification of an intelligible verbal message (a word or sentence, for example) but solely on the identification of a sound (a noise, for example). In this way, visual activity, even if it does not correspond to an element that can be understood in sign language, could be automatically detected by this application and would therefore serve as a mechanism for identifying the activity of a person who signs. It is therefore possible to test by performing gestures even if they do not correspond to an element of meaning in sign language.",
  "17.10.1": "1.\tIdentify the functions available in the web application (apart from the oral communication function) that are based on listening to information or issuing commands, for example \n\t- voicemail;\n\t- an automatic switchboard (e.g. one that requires you to say a number between 1 and 4 to be redirected to a service);\n\t- or any other interactive voice server.\n2.\tCheck that: \n\t- the information is available without having to listen or speak (e.g. using a transcript or chat system);\n\t- the actions can be carried out without having to listen or speak, or that there is an alternative to the functionality that can be used without having to listen or speak.\n3.\tIf this is the case, the test is validated.",
  "17.11.1": "For the conditions concerning resolution and frame rate, the most reliable way of assessing this criterion is to search either the interface or the application documentation for this information. It is also recommended to ask the application publisher to provide these technical details.\n\nFor the last condition concerning the time lag between video and audio, the test can be established by simple observation:\n1. Activate the web application on two devices.\n2. Establish a video call connection between the two devices.\n3. Check that speech and video are synchronised (lip-sync, lip movement).\n4. If this is the case, the test is validated."
}