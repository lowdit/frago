{{ if (fileExists "content/audits") -}}
{{/* DECLARE - main key */}}
{{ $reflist   := (slice "actions" "accessibility" "raweb" "raam" "ecoconception" "opquast" "publishing" "performance" "recommendation" "ecoindex") }}
{{ $loop    := partialCached "utils/keyaudits" "keyaudits" }}

{{/* DECLARE - Slice with all keys */}}
{{ $keyaudit  := slice }}
{{ range $key, $value := $loop }}
  {{ range (.) }}
    {{ $keyaudit = $keyaudit | append . }}
  {{ end }}
{{ end }}

{{/* START - Loop the folder where audits are */}}
{{ range (readDir "content/audits") }}
  {{ $rep := . }}
  {{ $name := .Name }}
  {{ $l1 := slice }}
  {{ if .IsDir }}
  {{/* DECLARE - Slice with all folders  */}}
  {{ range (readDir (printf "content/audits/%s" .Name)) }}
    {{ if .IsDir }}
      {{ $l1 = $l1 | append .Name }}
    {{ end }}
  {{ end }}
  {{/* START - Loop keys */}}
  {{ range $reflist }}
    {{ $ref := . }}
    {{ range (index $loop .) }}
      {{ $audit := (printf "content/audits/%s/%s" $name . ) }}
      {{ if (fileExists $audit) }}
        {{ if (eq $ref "accessibility") }}
          {{ $page := dict
            "kind" "page"
            "path" (printf "%s/%s/%s" $name $ref "declaration")
            "title" "declaration"
          }}
          {{ $.AddPage $page }}
        {{ else if (eq $ref "ecoconception") }}
          {{ $page := dict
            "kind" "page"
            "path" (printf "%s/%s/%s" $name $ref "declaration-ecoconception")
            "title" "declaration-ecoconception"
          }}
          {{ $.AddPage $page }}
        {{ end }}
      
          {{ $page := dict
            "kind" "page"
            "path" (printf "%s/%s" $name $ref)
            "title" $ref
          }}
          {{ $.AddPage $page }}
        {{ end }} 
      {{ end }}
    {{ end }}
  {{ end }}
  {{/* END - Loop keys */}}
  {{/* START - Projects Subfolder */}}
  {{ range (symdiff $keyaudit (union $l1 $keyaudit)) }}
    {{ $l2 := .}}
    {{ range $reflist }}
      {{ $ref := . }}
      {{ range (index $loop .) }}
        {{ $audit := (printf "content/audits/%s/%s" $name . ) }}
        {{ if (fileExists $audit) }}
            {{ $page := dict
              "kind" "page"
              "path" (printf "%s/%s/%s" $name $l2 $ref)
              "title" $ref
            }}
            {{ $.AddPage $page }}
          {{ end }}         
        {{ end }}
      {{ end }}
    {{ end }}
    {{/* END - Projects Subfolder */}}
  {{ end }}
{{ end }}
{{/* END - Loop the folder where audits are */}}
